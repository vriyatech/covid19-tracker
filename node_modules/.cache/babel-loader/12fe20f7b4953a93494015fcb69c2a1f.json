{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\src\\\\components\\\\NavBar.js\";\nimport React, { Component } from 'react';\nimport { isMobile, isIPad13 } from 'react-device-detect';\nimport i18n from '../data/i18n.yml';\nexport default class NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      langText: 'English',\n      scaleText: i18n.LINEAR_SCALE.en,\n      darkModeText: i18n.DARK.en\n    };\n\n    this.setTexts = () => {\n      const {\n        scale,\n        lang,\n        darkMode\n      } = this.props;\n      this.setState({\n        langText: lang === 'en' ? 'English' : '中文',\n        scaleText: scale === 'linear' ? i18n.LINEAR_SCALE[lang] : i18n.LOG_SCALE[lang],\n        darkModeText: darkMode ? i18n.DARK[lang] : i18n.LIGHT[lang]\n      });\n    };\n\n    this.onScaleChange = () => {\n      const newScale = this.props.scale === 'linear' ? 'log' : 'linear';\n      this.props.scaleToggle(newScale);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.scale !== this.props.scale || prevProps.lang !== this.props.lang || prevProps.darkMode !== this.props.darkMode) this.setTexts();\n  }\n\n  render() {\n    const {\n      scale,\n      lang,\n      darkMode\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, isMobile || isIPad13 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar-icon\",\n      onTouchStart: this.props.languageToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, lang === 'en' ? 'English' : '中文') : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar-icon\",\n      \"data-tip\": i18n.LANGUAGE_HELP_TEXT[lang],\n      onClick: this.props.languageToggle,\n      onMouseEnter: () => this.setState({\n        langText: lang === 'en' ? 'English' : 'English'\n      }),\n      onMouseLeave: this.setTexts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, this.state.langText), isMobile || isIPad13 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar-icon\",\n      onTouchStart: this.props.darkModeToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, darkMode ? i18n.DARK[lang] : i18n.LIGHT[lang]) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar-icon\",\n      \"data-tip\": darkMode ? i18n.LIGHT_MODE_HELP_TEXT[lang] : i18n.DARK_MODE_HELP_TEXT[lang],\n      onClick: this.props.darkModeToggle,\n      onMouseEnter: () => this.setState({\n        darkModeText: darkMode ? i18n.LIGHT[lang] : i18n.DARK[lang]\n      }),\n      onMouseLeave: this.setTexts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.state.darkModeText), isMobile || isIPad13 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar-icon\",\n      onTouchStart: this.onScaleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, scale === 'linear' ? i18n.LINEAR_SCALE[lang] : i18n.LOG_SCALE[lang]) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar-icon\",\n      \"data-tip\": scale === 'linear' ? i18n.LOG_SCALE_HELP_TEXT[lang] : i18n.LINEAR_SCALE_HELP_TEXT[lang],\n      onClick: this.onScaleChange,\n      onMouseEnter: () => this.setState({\n        scaleText: scale === 'linear' ? i18n.LOG_SCALE[lang] : i18n.LINEAR_SCALE[lang]\n      }),\n      onMouseLeave: this.setTexts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, this.state.scaleText), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar-icon\",\n      \"data-tip\": i18n.RESET_HELP_TEXT[lang],\n      onClick: this.props.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, i18n.RESET[lang]));\n  }\n\n}","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/NavBar.js"],"names":["React","Component","isMobile","isIPad13","i18n","NavBar","state","langText","scaleText","LINEAR_SCALE","en","darkModeText","DARK","setTexts","scale","lang","darkMode","props","setState","LOG_SCALE","LIGHT","onScaleChange","newScale","scaleToggle","componentDidUpdate","prevProps","prevState","render","languageToggle","LANGUAGE_HELP_TEXT","darkModeToggle","LIGHT_MODE_HELP_TEXT","DARK_MODE_HELP_TEXT","LOG_SCALE_HELP_TEXT","LINEAR_SCALE_HELP_TEXT","RESET_HELP_TEXT","reset","RESET"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { isMobile, isIPad13 } from 'react-device-detect'\r\nimport i18n from '../data/i18n.yml'\r\n\r\nexport default class NavBar extends Component {\r\n    state = {\r\n        langText: 'English',\r\n        scaleText: i18n.LINEAR_SCALE.en,\r\n        darkModeText: i18n.DARK.en\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            prevProps.scale !== this.props.scale ||\r\n            prevProps.lang !== this.props.lang ||\r\n            prevProps.darkMode !== this.props.darkMode\r\n        )\r\n            this.setTexts()\r\n    }\r\n\r\n    setTexts = () => {\r\n        const { scale, lang, darkMode } = this.props\r\n        this.setState({\r\n            langText: lang === 'en' ? 'English' : '中文',\r\n            scaleText: scale === 'linear' ? i18n.LINEAR_SCALE[lang] : i18n.LOG_SCALE[lang],\r\n            darkModeText: darkMode ? i18n.DARK[lang] : i18n.LIGHT[lang]\r\n        })\r\n    }\r\n\r\n    onScaleChange = () => {\r\n        const newScale = this.props.scale === 'linear' ? 'log' : 'linear'\r\n        this.props.scaleToggle(newScale)\r\n    }\r\n\r\n    render() {\r\n        const { scale, lang, darkMode } = this.props\r\n        return (\r\n            <div className=\"nav-bar\">\r\n                {isMobile || isIPad13 ? (\r\n                    <div className=\"nav-bar-icon\" onTouchStart={this.props.languageToggle}>\r\n                        {lang === 'en' ? 'English' : '中文'}\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        className=\"nav-bar-icon\"\r\n                        data-tip={i18n.LANGUAGE_HELP_TEXT[lang]}\r\n                        onClick={this.props.languageToggle}\r\n                        onMouseEnter={() =>\r\n                            this.setState({\r\n                                langText: lang === 'en' ? 'English' : 'English'\r\n                            })}\r\n                        onMouseLeave={this.setTexts}\r\n                    >\r\n                        {this.state.langText}\r\n                    </div>\r\n                )}\r\n                {isMobile || isIPad13 ? (\r\n                    <div className=\"nav-bar-icon\" onTouchStart={this.props.darkModeToggle}>\r\n                        {darkMode ? i18n.DARK[lang] : i18n.LIGHT[lang]}\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        className=\"nav-bar-icon\"\r\n                        data-tip={darkMode ? i18n.LIGHT_MODE_HELP_TEXT[lang] : i18n.DARK_MODE_HELP_TEXT[lang]}\r\n                        onClick={this.props.darkModeToggle}\r\n                        onMouseEnter={() =>\r\n                            this.setState({\r\n                                darkModeText: darkMode ? i18n.LIGHT[lang] : i18n.DARK[lang]\r\n                            })}\r\n                        onMouseLeave={this.setTexts}\r\n                    >\r\n                        {this.state.darkModeText}\r\n                    </div>\r\n                )}\r\n                {isMobile || isIPad13 ? (\r\n                    <div className=\"nav-bar-icon\" onTouchStart={this.onScaleChange}>\r\n                        {scale === 'linear' ? i18n.LINEAR_SCALE[lang] : i18n.LOG_SCALE[lang]}\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        className=\"nav-bar-icon\"\r\n                        data-tip={\r\n                            scale === 'linear' ? i18n.LOG_SCALE_HELP_TEXT[lang] : i18n.LINEAR_SCALE_HELP_TEXT[lang]\r\n                        }\r\n                        onClick={this.onScaleChange}\r\n                        onMouseEnter={() =>\r\n                            this.setState({\r\n                                scaleText: scale === 'linear' ? i18n.LOG_SCALE[lang] : i18n.LINEAR_SCALE[lang]\r\n                            })}\r\n                        onMouseLeave={this.setTexts}\r\n                    >\r\n                        {this.state.scaleText}\r\n                    </div>\r\n                )}\r\n                <div className=\"nav-bar-icon\" data-tip={i18n.RESET_HELP_TEXT[lang]} onClick={this.props.reset}>\r\n                    {i18n.RESET[lang]}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}