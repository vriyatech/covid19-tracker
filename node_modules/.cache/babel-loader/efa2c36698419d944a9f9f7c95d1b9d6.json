{"ast":null,"code":"import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nexport default function PatternCircles(_ref) {\n  var id = _ref.id,\n      width = _ref.width,\n      height = _ref.height,\n      _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 2 : _ref$radius,\n      fill = _ref.fill,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      background = _ref.background,\n      _ref$complement = _ref.complement,\n      complement = _ref$complement === void 0 ? false : _ref$complement,\n      className = _ref.className;\n  var corners;\n\n  if (complement) {\n    corners = [[0, 0], [0, height], [width, 0], [width, height]];\n  }\n\n  return React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: background\n  }), React.createElement(\"circle\", {\n    className: cx('vx-pattern-circle', className),\n    cx: width / 2,\n    cy: height / 2,\n    r: radius,\n    fill: fill,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray\n  }), corners && corners.map(function (_ref2) {\n    var cornerX = _ref2[0],\n        cornerY = _ref2[1];\n    return React.createElement(\"circle\", {\n      key: id + \"-complement-\" + cornerX + \"-\" + cornerY,\n      className: cx('vx-pattern-circle vx-pattern-circle-complement', className),\n      cx: cornerX,\n      cy: cornerY,\n      r: radius,\n      fill: fill,\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray\n    });\n  }));\n}\nPatternCircles.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  radius: _pt.number,\n  fill: _pt.string,\n  className: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.number, _pt.string]),\n  complement: _pt.bool,\n  background: _pt.string\n};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/node_modules/@vx/pattern/esm/patterns/Circles.js"],"names":["_pt","React","cx","Pattern","PatternCircles","_ref","id","width","height","_ref$radius","radius","fill","stroke","strokeWidth","strokeDasharray","background","_ref$complement","complement","className","corners","createElement","cy","r","map","_ref2","cornerX","cornerY","key","propTypes","string","isRequired","number","oneOfType","bool"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nexport default function PatternCircles(_ref) {\n  var id = _ref.id,\n      width = _ref.width,\n      height = _ref.height,\n      _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 2 : _ref$radius,\n      fill = _ref.fill,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      background = _ref.background,\n      _ref$complement = _ref.complement,\n      complement = _ref$complement === void 0 ? false : _ref$complement,\n      className = _ref.className;\n  var corners;\n\n  if (complement) {\n    corners = [[0, 0], [0, height], [width, 0], [width, height]];\n  }\n\n  return React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: background\n  }), React.createElement(\"circle\", {\n    className: cx('vx-pattern-circle', className),\n    cx: width / 2,\n    cy: height / 2,\n    r: radius,\n    fill: fill,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray\n  }), corners && corners.map(function (_ref2) {\n    var cornerX = _ref2[0],\n        cornerY = _ref2[1];\n    return React.createElement(\"circle\", {\n      key: id + \"-complement-\" + cornerX + \"-\" + cornerY,\n      className: cx('vx-pattern-circle vx-pattern-circle-complement', className),\n      cx: cornerX,\n      cy: cornerY,\n      r: radius,\n      fill: fill,\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray\n    });\n  }));\n}\nPatternCircles.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  radius: _pt.number,\n  fill: _pt.string,\n  className: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.number, _pt.string]),\n  complement: _pt.bool,\n  background: _pt.string\n};"]},"metadata":{},"sourceType":"module"}