{"ast":null,"code":"import { all, takeEvery, put } from \"redux-saga/effects\";\nimport { addRecordLink } from \"../../services/apiLink\";\nimport axios from \"axios\";\nimport { ADD_RECORD_SUCCESS, ADD_RECORD_FAIL, ADD_RECORD } from \"../actions/actionTypes\";\nimport { notification } from 'antd';\nnotification.config({\n  placement: 'topRight',\n  top: 50,\n  duration: 5\n});\n\nconst openNotificationWithIcon = (type, message, description) => {\n  notification[type]({\n    message: message,\n    description: description\n  });\n}; // ADD RECORD\n\n\nexport function* addRecord({\n  formData,\n  history\n}) {\n  try {\n    console.log(formData, \"data\");\n    const result = yield fetch(addRecordLink, {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const response = yield result.json();\n    console.log(response); // const result = fetch('https://apiflu.vriya.com:9092/flu/SaveRecords',{\n    //     method:'POST',\n    //     mode:'cors',\n    //     body:JSON.stringify(data),\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     }\n    //   }).then(response => response.json()).then(data => console.log(data.status,data.message,data.risk))\n    //   .then(data =>this.props.history.push({\n    //     pathname: '/CheckResult',\n    //     state: data\n    //   }));\n\n    if (response.status == 1) {\n      yield put({\n        type: ADD_RECORD_SUCCESS,\n        payload: response\n      });\n      const type = 'success';\n      const message = 'Record Add Success';\n      const description = 'New Record has been successfully added.';\n      openNotificationWithIcon(type, message, description);\n      history.push('/CheckResult');\n    } else {\n      yield put({\n        type: ADD_RECORD_FAIL,\n        error: response.message\n      });\n      const type = 'error';\n      const message = 'Add new record Failed';\n      const description = 'Something went wrong. Please try again.';\n      openNotificationWithIcon(type, message, description);\n    }\n  } catch (error) {\n    yield put({\n      type: ADD_RECORD_FAIL,\n      error: error\n    });\n    const type = 'error';\n    const message = 'Add new record Failed';\n    const description = 'Something went wrong. Please try again.';\n    openNotificationWithIcon(type, message, description);\n  }\n}\nexport default function* checkSymptomSagas() {\n  yield all([takeEvery(ADD_RECORD, addRecord)]);\n}","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/redux/sagas/checkSymptomSagas.js"],"names":["all","takeEvery","put","addRecordLink","axios","ADD_RECORD_SUCCESS","ADD_RECORD_FAIL","ADD_RECORD","notification","config","placement","top","duration","openNotificationWithIcon","type","message","description","addRecord","formData","history","console","log","result","fetch","method","body","JSON","stringify","headers","response","json","status","payload","push","error","checkSymptomSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,oBAApC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,eAFF,EAGEC,UAHF,QAIO,wBAJP;AAMA,SAASC,YAAT,QAA6B,MAA7B;AAEAA,YAAY,CAACC,MAAb,CAAoB;AAClBC,EAAAA,SAAS,EAAE,UADO;AAElBC,EAAAA,GAAG,EAAE,EAFa;AAGlBC,EAAAA,QAAQ,EAAE;AAHQ,CAApB;;AAMA,MAAMC,wBAAwB,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,WAAhB,KAAgC;AAC/DR,EAAAA,YAAY,CAACM,IAAD,CAAZ,CAAmB;AACjBC,IAAAA,OAAO,EAAEA,OADQ;AAEjBC,IAAAA,WAAW,EAAEA;AAFI,GAAnB;AAID,CALD,C,CAOA;;;AACA,OAAO,UAAUC,SAAV,CAAoB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAApB,EAA2C;AAChD,MAAG;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,MAArB;AACA,UAAMI,MAAM,GAAK,MAAMC,KAAK,CAACpB,aAAD,EAAe;AAACqB,MAAAA,MAAM,EAAC,MAAR;AACbC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeT,QAAf,CADQ;AAEbU,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB;AAFK,KAAf,CAA5B;AAIA,UAAMC,QAAQ,GAAG,MAAMP,MAAM,CAACQ,IAAP,EAAvB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ,EAPC,CASD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAGA,QAAQ,CAACE,MAAT,IAAmB,CAAtB,EAAyB;AACxB,YAAM7B,GAAG,CAAC;AACRY,QAAAA,IAAI,EAACT,kBADG;AAER2B,QAAAA,OAAO,EAACH;AAFA,OAAD,CAAT;AAKA,YAAMf,IAAI,GAAG,SAAb;AACA,YAAMC,OAAO,GAAG,oBAAhB;AACA,YAAMC,WAAW,GAAG,yCAApB;AACAH,MAAAA,wBAAwB,CAACC,IAAD,EAAOC,OAAP,EAAgBC,WAAhB,CAAxB;AACAG,MAAAA,OAAO,CAACc,IAAR,CAAa,cAAb;AACA,KAXD,MAWO;AACN,YAAM/B,GAAG,CAAC;AACRY,QAAAA,IAAI,EAACR,eADG;AAER4B,QAAAA,KAAK,EAACL,QAAQ,CAACd;AAFP,OAAD,CAAT;AAIC,YAAMD,IAAI,GAAG,OAAb;AACA,YAAMC,OAAO,GAAG,uBAAhB;AACA,YAAMC,WAAW,GAAG,yCAApB;AACAH,MAAAA,wBAAwB,CAACC,IAAD,EAAOC,OAAP,EAAgBC,WAAhB,CAAxB;AACD;AACF,GA3CD,CA2CC,OAAMkB,KAAN,EAAY;AACX,UAAMhC,GAAG,CAAC;AACRY,MAAAA,IAAI,EAACR,eADG;AAER4B,MAAAA,KAAK,EAACA;AAFE,KAAD,CAAT;AAIA,UAAMpB,IAAI,GAAG,OAAb;AACA,UAAMC,OAAO,GAAG,uBAAhB;AACA,UAAMC,WAAW,GAAG,yCAApB;AACAH,IAAAA,wBAAwB,CAACC,IAAD,EAAOC,OAAP,EAAgBC,WAAhB,CAAxB;AACD;AACF;AAID,eAAe,UAAUmB,iBAAV,GAA8B;AAC3C,QAAMnC,GAAG,CAAC,CACRC,SAAS,CAACM,UAAD,EAAaU,SAAb,CADD,CAAD,CAAT;AAGD","sourcesContent":["import { all, takeEvery, put } from \"redux-saga/effects\";\r\nimport { addRecordLink } from \"../../services/apiLink\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_RECORD_SUCCESS,\r\n  ADD_RECORD_FAIL,\r\n  ADD_RECORD\r\n} from \"../actions/actionTypes\";\r\n\r\nimport { notification } from 'antd';\r\n\r\nnotification.config({\r\n  placement: 'topRight',\r\n  top: 50,\r\n  duration: 5,\r\n});\r\n\r\nconst openNotificationWithIcon = (type, message, description) => {\r\n  notification[type]({\r\n    message: message,\r\n    description: description\r\n  });\r\n};\r\n\r\n// ADD RECORD\r\nexport function* addRecord({ formData, history }) {\r\n  try{\r\n    console.log(formData,\"data\");\r\n    const result =   yield fetch(addRecordLink,{method:'POST',\r\n                                  body:JSON.stringify(formData),\r\n                                  headers:{'Content-Type': 'application/json'}\r\n                          })\r\n    const response = yield result.json(); \r\n    console.log(response);  \r\n\r\n    // const result = fetch('https://apiflu.vriya.com:9092/flu/SaveRecords',{\r\n    //     method:'POST',\r\n    //     mode:'cors',\r\n    //     body:JSON.stringify(data),\r\n    //     headers: {\r\n    //       'Content-Type': 'application/json'\r\n    //     }\r\n    //   }).then(response => response.json()).then(data => console.log(data.status,data.message,data.risk))\r\n    //   .then(data =>this.props.history.push({\r\n    //     pathname: '/CheckResult',\r\n    //     state: data\r\n    //   }));\r\n\r\n    if(response.status == 1) {\r\n     yield put({\r\n       type:ADD_RECORD_SUCCESS,\r\n       payload:response,\r\n     })\r\n\r\n     const type = 'success';\r\n     const message = 'Record Add Success';\r\n     const description = 'New Record has been successfully added.';\r\n     openNotificationWithIcon(type, message, description);\r\n     history.push('/CheckResult')\r\n    } else {\r\n     yield put({\r\n       type:ADD_RECORD_FAIL,\r\n       error:response.message\r\n     })\r\n      const type = 'error';\r\n      const message = 'Add new record Failed';\r\n      const description = 'Something went wrong. Please try again.';\r\n      openNotificationWithIcon(type, message, description);\r\n    }\r\n  }catch(error){\r\n    yield put({\r\n      type:ADD_RECORD_FAIL,\r\n      error:error\r\n    })\r\n    const type = 'error';\r\n    const message = 'Add new record Failed';\r\n    const description = 'Something went wrong. Please try again.';\r\n    openNotificationWithIcon(type, message, description);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function* checkSymptomSagas() {\r\n  yield all([\r\n    takeEvery(ADD_RECORD, addRecord)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}