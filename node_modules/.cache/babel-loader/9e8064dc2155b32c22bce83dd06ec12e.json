{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(addRecord),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(checkSymptomSagas);import{all,takeEvery,put}from\"redux-saga/effects\";import{addRecordLink}from\"../../services/apiLink\";import axios from\"axios\";import{ADD_RECORD_SUCCESS,ADD_RECORD_FAIL,ADD_RECORD}from\"../actions/actionTypes\";import{notification}from'antd';notification.config({placement:'topRight',top:50,duration:5});var openNotificationWithIcon=function openNotificationWithIcon(type,message,description){notification[type]({message:message,description:description});};// ADD RECORD\nexport function addRecord(_ref){var formData,history,result,response,type,message,description,_type,_message,_description,_type2,_message2,_description2;return _regeneratorRuntime.wrap(function addRecord$(_context){while(1){switch(_context.prev=_context.next){case 0:formData=_ref.formData,history=_ref.history;_context.prev=1;console.log(formData,\"data\");_context.next=5;return fetch(addRecordLink,{method:'POST',body:JSON.stringify(formData),headers:{'Content-Type':'application/json'}});case 5:result=_context.sent;_context.next=8;return result.json();case 8:response=_context.sent;console.log(response);// const result = fetch('https://apiflu.vriya.com:9092/flu/SaveRecords',{\n//     method:'POST',\n//     mode:'cors',\n//     body:JSON.stringify(data),\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   }).then(response => response.json()).then(data => console.log(data.status,data.message,data.risk))\n//   .then(data =>this.props.history.push({\n//     pathname: '/CheckResult',\n//     state: data\n//   }));\nif(!(response.status==1)){_context.next=20;break;}_context.next=13;return put({type:ADD_RECORD_SUCCESS,payload:response});case 13:type='success';message='Record Add Success';description='New Record has been successfully added.';openNotificationWithIcon(type,message,description);history.push('/CheckResult');_context.next=26;break;case 20:_context.next=22;return put({type:ADD_RECORD_FAIL,error:response.message});case 22:_type='error';_message='Add new record Failed';_description='Something went wrong. Please try again.';openNotificationWithIcon(_type,_message,_description);case 26:_context.next=36;break;case 28:_context.prev=28;_context.t0=_context[\"catch\"](1);_context.next=32;return put({type:ADD_RECORD_FAIL,error:_context.t0});case 32:_type2='error';_message2='Add new record Failed';_description2='Something went wrong. Please try again.';openNotificationWithIcon(_type2,_message2,_description2);case 36:case\"end\":return _context.stop();}}},_marked,null,[[1,28]]);}export default function checkSymptomSagas(){return _regeneratorRuntime.wrap(function checkSymptomSagas$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return all([takeEvery(ADD_RECORD,addRecord)]);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/redux/sagas/checkSymptomSagas.js"],"names":["addRecord","checkSymptomSagas","all","takeEvery","put","addRecordLink","axios","ADD_RECORD_SUCCESS","ADD_RECORD_FAIL","ADD_RECORD","notification","config","placement","top","duration","openNotificationWithIcon","type","message","description","formData","history","console","log","fetch","method","body","JSON","stringify","headers","result","json","response","status","payload","push","error"],"mappings":"+MAyBiBA,S,iDA0DQC,iB,EAnFzB,OAASC,GAAT,CAAcC,SAAd,CAAyBC,GAAzB,KAAoC,oBAApC,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,kBADF,CAEEC,eAFF,CAGEC,UAHF,KAIO,wBAJP,CAMA,OAASC,YAAT,KAA6B,MAA7B,CAEAA,YAAY,CAACC,MAAb,CAAoB,CAClBC,SAAS,CAAE,UADO,CAElBC,GAAG,CAAE,EAFa,CAGlBC,QAAQ,CAAE,CAHQ,CAApB,EAMA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,IAAD,CAAOC,OAAP,CAAgBC,WAAhB,CAAgC,CAC/DR,YAAY,CAACM,IAAD,CAAZ,CAAmB,CACjBC,OAAO,CAAEA,OADQ,CAEjBC,WAAW,CAAEA,WAFI,CAAnB,EAID,CALD,CAOA;AACA,MAAO,SAAUlB,CAAAA,SAAV,kPAAsBmB,QAAtB,MAAsBA,QAAtB,CAAgCC,OAAhC,MAAgCA,OAAhC,iBAEHC,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAAqB,MAArB,EAFG,gBAGc,MAAMI,CAAAA,KAAK,CAAClB,aAAD,CAAe,CAACmB,MAAM,CAAC,MAAR,CACbC,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeR,QAAf,CADQ,CAEbS,OAAO,CAAC,CAAC,eAAgB,kBAAjB,CAFK,CAAf,CAAX,CAHd,OAGGC,MAHH,+BAOc,MAAMA,CAAAA,MAAM,CAACC,IAAP,EAAN,CAPd,OAOGC,QAPH,eAQHV,OAAO,CAACC,GAAR,CAAYS,QAAZ,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBG,KAuBAA,QAAQ,CAACC,MAAT,EAAmB,CAvBnB,4CAwBF,MAAM5B,CAAAA,GAAG,CAAC,CACRY,IAAI,CAACT,kBADG,CAER0B,OAAO,CAACF,QAFA,CAAD,CAAT,CAxBE,QA6BIf,IA7BJ,CA6BW,SA7BX,CA8BIC,OA9BJ,CA8Bc,oBA9Bd,CA+BIC,WA/BJ,CA+BkB,yCA/BlB,CAgCFH,wBAAwB,CAACC,IAAD,CAAOC,OAAP,CAAgBC,WAAhB,CAAxB,CACAE,OAAO,CAACc,IAAR,CAAa,cAAb,EAjCE,gDAmCF,MAAM9B,CAAAA,GAAG,CAAC,CACRY,IAAI,CAACR,eADG,CAER2B,KAAK,CAACJ,QAAQ,CAACd,OAFP,CAAD,CAAT,CAnCE,QAuCKD,KAvCL,CAuCY,OAvCZ,CAwCKC,QAxCL,CAwCe,uBAxCf,CAyCKC,YAzCL,CAyCmB,yCAzCnB,CA0CDH,wBAAwB,CAACC,KAAD,CAAOC,QAAP,CAAgBC,YAAhB,CAAxB,CA1CC,0GA6CH,MAAMd,CAAAA,GAAG,CAAC,CACRY,IAAI,CAACR,eADG,CAER2B,KAAK,YAFG,CAAD,CAAT,CA7CG,QAiDGnB,MAjDH,CAiDU,OAjDV,CAkDGC,SAlDH,CAkDa,uBAlDb,CAmDGC,aAnDH,CAmDiB,yCAnDjB,CAoDHH,wBAAwB,CAACC,MAAD,CAAOC,SAAP,CAAgBC,aAAhB,CAAxB,CApDG,qEA0DP,cAAe,SAAUjB,CAAAA,iBAAV,iJACb,MAAMC,CAAAA,GAAG,CAAC,CACRC,SAAS,CAACM,UAAD,CAAaT,SAAb,CADD,CAAD,CAAT,CADa","sourcesContent":["import { all, takeEvery, put } from \"redux-saga/effects\";\r\nimport { addRecordLink } from \"../../services/apiLink\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_RECORD_SUCCESS,\r\n  ADD_RECORD_FAIL,\r\n  ADD_RECORD\r\n} from \"../actions/actionTypes\";\r\n\r\nimport { notification } from 'antd';\r\n\r\nnotification.config({\r\n  placement: 'topRight',\r\n  top: 50,\r\n  duration: 5,\r\n});\r\n\r\nconst openNotificationWithIcon = (type, message, description) => {\r\n  notification[type]({\r\n    message: message,\r\n    description: description\r\n  });\r\n};\r\n\r\n// ADD RECORD\r\nexport function* addRecord({ formData, history }) {\r\n  try{\r\n    console.log(formData,\"data\");\r\n    const result =   yield fetch(addRecordLink,{method:'POST',\r\n                                  body:JSON.stringify(formData),\r\n                                  headers:{'Content-Type': 'application/json'}\r\n                          })\r\n    const response = yield result.json(); \r\n    console.log(response);  \r\n\r\n    // const result = fetch('https://apiflu.vriya.com:9092/flu/SaveRecords',{\r\n    //     method:'POST',\r\n    //     mode:'cors',\r\n    //     body:JSON.stringify(data),\r\n    //     headers: {\r\n    //       'Content-Type': 'application/json'\r\n    //     }\r\n    //   }).then(response => response.json()).then(data => console.log(data.status,data.message,data.risk))\r\n    //   .then(data =>this.props.history.push({\r\n    //     pathname: '/CheckResult',\r\n    //     state: data\r\n    //   }));\r\n\r\n    if(response.status == 1) {\r\n     yield put({\r\n       type:ADD_RECORD_SUCCESS,\r\n       payload:response,\r\n     })\r\n\r\n     const type = 'success';\r\n     const message = 'Record Add Success';\r\n     const description = 'New Record has been successfully added.';\r\n     openNotificationWithIcon(type, message, description);\r\n     history.push('/CheckResult')\r\n    } else {\r\n     yield put({\r\n       type:ADD_RECORD_FAIL,\r\n       error:response.message\r\n     })\r\n      const type = 'error';\r\n      const message = 'Add new record Failed';\r\n      const description = 'Something went wrong. Please try again.';\r\n      openNotificationWithIcon(type, message, description);\r\n    }\r\n  }catch(error){\r\n    yield put({\r\n      type:ADD_RECORD_FAIL,\r\n      error:error\r\n    })\r\n    const type = 'error';\r\n    const message = 'Add new record Failed';\r\n    const description = 'Something went wrong. Please try again.';\r\n    openNotificationWithIcon(type, message, description);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function* checkSymptomSagas() {\r\n  yield all([\r\n    takeEvery(ADD_RECORD, addRecord)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}