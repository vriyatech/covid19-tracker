{"ast":null,"code":"import _classCallCheck from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import RadioButton from'./RadioButton';import i18n from'../data/i18n.yml';import{plotTypes,plotSpecificTypes}from'../utils/plot_types';var PlotNavBar=/*#__PURE__*/function(_Component){_inherits(PlotNavBar,_Component);var _super=_createSuper(PlotNavBar);function PlotNavBar(){_classCallCheck(this,PlotNavBar);return _super.apply(this,arguments);}_createClass(PlotNavBar,[{key:\"render\",value:function render(){var _this$props=this.props,plotType=_this$props.plotType,plotSpecificType=_this$props.plotSpecificType,lang=_this$props.lang,_onSelect=_this$props.onSelect,plotDetails=_this$props.plotDetails,scale=_this$props.scale,scaleToggle=_this$props.scaleToggle;return/*#__PURE__*/React.createElement(\"div\",{className:\"plot-nav-bar\"},plotTypes[plotType].statsChange&&/*#__PURE__*/React.createElement(RadioButton,{title:i18n.TYPE[lang],texts:{cumulative:i18n.CUMULATIVE[lang],daily:i18n.DAILY[lang]},selected:plotDetails.stats,onSelect:function onSelect(s){return _onSelect('stats',s);},alwaysShow:true}),(plotType==='plot_fatality_line'||plotType==='plot_subregion_fatality')&&/*#__PURE__*/React.createElement(RadioButton,{title:i18n.Y_AXIS[lang],texts:{rate:i18n.RATE[lang],deaths:i18n.DEATH_NUMBER2[lang]},selected:plotDetails.fatalityLine,onSelect:function onSelect(s){return _onSelect('fatalityLine',s);}}),(plotType==='plot_fatality_line'||plotType==='plot_subregion_fatality')&&/*#__PURE__*/React.createElement(RadioButton,{title:i18n.COMPARISONS[lang],texts:{show:i18n.SHOW[lang],hide:i18n.HIDE[lang]},selected:plotDetails.diseaseComparison,onSelect:function onSelect(s){return _onSelect('diseaseComparison',s);}}),plotTypes[plotType].scaleChange&&/*#__PURE__*/React.createElement(RadioButton,{title:i18n.SCALE[lang],texts:{linear:i18n.LINEAR_SCALE[lang],log:i18n.LOG_SCALE[lang]},selected:scale,onSelect:function onSelect(s){return scaleToggle(s);},disabled:plotSpecificTypes[plotSpecificType].log?false:true}),plotSpecificTypes[plotSpecificType].type==='stream'&&/*#__PURE__*/React.createElement(RadioButton,{title:i18n.Y_AXIS[lang],texts:{expand:i18n.PERCENT[lang],silhouette:i18n.CASE_NUMBERS[lang]},selected:plotDetails.stream,onSelect:function onSelect(s){return _onSelect('stream',s);}}),plotType==='plot_fatality_recovery'&&/*#__PURE__*/React.createElement(RadioButton,{title:i18n.RECOVERY_RATE[lang],texts:{show:i18n.SHOW[lang],hide:i18n.HIDE[lang]},selected:plotDetails.recoveryRate,onSelect:function onSelect(s){return _onSelect('recoveryRate',s);}}),plotTypes[plotType].movingAverage&&/*#__PURE__*/React.createElement(RadioButton,{title:i18n.MOVING_AVERAGE[lang],texts:{'1d':'â€”','3d':i18n.THREE_DAYS[lang],'5d':i18n.FIVE_DAYS[lang]},selected:plotDetails.movingAverage,onSelect:function onSelect(s){return _onSelect('movingAverage',s);}}));}}]);return PlotNavBar;}(Component);export{PlotNavBar as default};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/PlotNavBar.js"],"names":["React","Component","RadioButton","i18n","plotTypes","plotSpecificTypes","PlotNavBar","props","plotType","plotSpecificType","lang","onSelect","plotDetails","scale","scaleToggle","statsChange","TYPE","cumulative","CUMULATIVE","daily","DAILY","stats","s","Y_AXIS","rate","RATE","deaths","DEATH_NUMBER2","fatalityLine","COMPARISONS","show","SHOW","hide","HIDE","diseaseComparison","scaleChange","SCALE","linear","LINEAR_SCALE","log","LOG_SCALE","type","expand","PERCENT","silhouette","CASE_NUMBERS","stream","RECOVERY_RATE","recoveryRate","movingAverage","MOVING_AVERAGE","THREE_DAYS","FIVE_DAYS"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport RadioButton from './RadioButton'\r\nimport i18n from '../data/i18n.yml'\r\nimport { plotTypes, plotSpecificTypes } from '../utils/plot_types'\r\n\r\nexport default class PlotNavBar extends Component {\r\n    render() {\r\n        const { plotType, plotSpecificType, lang, onSelect, plotDetails, scale, scaleToggle } = this.props\r\n        return (\r\n            <div className=\"plot-nav-bar\">\r\n                {plotTypes[plotType].statsChange && (\r\n                    <RadioButton\r\n                        title={i18n.TYPE[lang]}\r\n                        texts={{ cumulative: i18n.CUMULATIVE[lang], daily: i18n.DAILY[lang] }}\r\n                        selected={plotDetails.stats}\r\n                        onSelect={(s) => onSelect('stats', s)}\r\n                        alwaysShow={true}\r\n                    />\r\n                )}\r\n                {(plotType === 'plot_fatality_line' || plotType === 'plot_subregion_fatality') && (\r\n                    <RadioButton\r\n                        title={i18n.Y_AXIS[lang]}\r\n                        texts={{ rate: i18n.RATE[lang], deaths: i18n.DEATH_NUMBER2[lang] }}\r\n                        selected={plotDetails.fatalityLine}\r\n                        onSelect={(s) => onSelect('fatalityLine', s)}\r\n                    />\r\n                )}\r\n                {(plotType === 'plot_fatality_line' || plotType === 'plot_subregion_fatality') && (\r\n                    <RadioButton\r\n                        title={i18n.COMPARISONS[lang]}\r\n                        texts={{ show: i18n.SHOW[lang], hide: i18n.HIDE[lang] }}\r\n                        selected={plotDetails.diseaseComparison}\r\n                        onSelect={(s) => onSelect('diseaseComparison', s)}\r\n                    />\r\n                )}\r\n                {plotTypes[plotType].scaleChange && (\r\n                    <RadioButton\r\n                        title={i18n.SCALE[lang]}\r\n                        texts={{ linear: i18n.LINEAR_SCALE[lang], log: i18n.LOG_SCALE[lang] }}\r\n                        selected={scale}\r\n                        onSelect={(s) => scaleToggle(s)}\r\n                        disabled={plotSpecificTypes[plotSpecificType].log ? false : true}\r\n                    />\r\n                )}\r\n                {plotSpecificTypes[plotSpecificType].type === 'stream' && (\r\n                    <RadioButton\r\n                        title={i18n.Y_AXIS[lang]}\r\n                        texts={{ expand: i18n.PERCENT[lang], silhouette: i18n.CASE_NUMBERS[lang] }}\r\n                        selected={plotDetails.stream}\r\n                        onSelect={(s) => onSelect('stream', s)}\r\n                    />\r\n                )}\r\n                {plotType === 'plot_fatality_recovery' && (\r\n                    <RadioButton\r\n                        title={i18n.RECOVERY_RATE[lang]}\r\n                        texts={{ show: i18n.SHOW[lang], hide: i18n.HIDE[lang] }}\r\n                        selected={plotDetails.recoveryRate}\r\n                        onSelect={(s) => onSelect('recoveryRate', s)}\r\n                    />\r\n                )}\r\n                {plotTypes[plotType].movingAverage && (\r\n                    <RadioButton\r\n                        title={i18n.MOVING_AVERAGE[lang]}\r\n                        texts={{ '1d': 'â€”', '3d': i18n.THREE_DAYS[lang], '5d': i18n.FIVE_DAYS[lang] }}\r\n                        selected={plotDetails.movingAverage}\r\n                        onSelect={(s) => onSelect('movingAverage', s)}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}