{"ast":null,"code":"import _objectSpread from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component,Fragment}from'react';import{UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem}from'reactstrap';import{FiMap}from'react-icons/fi';import'flag-icon-css/css/flag-icon.min.css';import{metricText}from'../utils/utils';import{mapText}from'../utils/map_text';import*as str from'../utils/strings';import{plotTypes}from'../utils/plot_types';var MapNavBar=/*#__PURE__*/function(_Component){_inherits(MapNavBar,_Component);var _super=_createSuper(MapNavBar);function MapNavBar(){var _this;_classCallCheck(this,MapNavBar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={dropdownOpen:false,height:-1};_this.updateHeight=function(){var height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;_this.setState({height:height});};_this.mapToggle=function(map){if(map!==_this.props.currentMap){_this.props.mapToggle(map);if(map===str.CHINA_MAP1||map===str.CHINA_MAP2){if(_this.props.currentMap!==str.CHINA_MAP1&&_this.props.currentMap!==str.CHINA_MAP2)_this.props.regionToggle([str.CHINA_ZH],false);}else if(map===str.US_MAP||map===str.US_MAP2){if(_this.props.currentMap!==str.US_MAP&&_this.props.currentMap!==str.US_MAP2)_this.props.regionToggle([str.US_ZH],false);}else if(map!==str.TRANSMISSION){_this.props.regionToggle([mapText[map].regionName],false);}}_this.setState({dropdownOpen:!_this.state.dropdownOpen});};_this.metricToggle=function(event){var newMetric=event.target.getAttribute('value');if(newMetric!==_this.props.metric)_this.props.metricToggle(newMetric);};return _this;}_createClass(MapNavBar,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateHeight();window.addEventListener('resize',this.updateHeight);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.updateHeight);}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,lang=_this$props.lang,metric=_this$props.metric,currentMap=_this$props.currentMap,fullPlot=_this$props.fullPlot,plotType=_this$props.plotType;return/*#__PURE__*/React.createElement(\"div\",{className:\"map-nav-bar-wrap \".concat(fullPlot&&!plotTypes[plotType].metricChange?'grey-out':'')},/*#__PURE__*/React.createElement(\"ul\",{className:\"map-nav-bar\"},['confirmedCount','deadCount','curedCount'].map(function(count){return/*#__PURE__*/React.createElement(\"li\",{key:\"map-nav-\".concat(count),className:count===metric?'current':''},/*#__PURE__*/React.createElement(\"div\",{value:count,onClick:_this2.metricToggle},metricText[count][lang]));})),!fullPlot&&/*#__PURE__*/React.createElement(UncontrolledDropdown,{className:\"map-toggle\"},/*#__PURE__*/React.createElement(DropdownToggle,{className:\"map-toggle-button\",tag:\"span\",\"data-toggle\":\"dropdown\",\"aria-expanded\":this.state.dropdownOpen},/*#__PURE__*/React.createElement(FiMap,{size:14,style:{marginRight:10}}),/*#__PURE__*/React.createElement(\"span\",null,mapText[currentMap].title[lang])),/*#__PURE__*/React.createElement(DropdownMenu,{modifiers:{setMaxHeight:{enabled:true,order:890,fn:function fn(data){return _objectSpread({},data,{styles:_objectSpread({},data.styles,{overflowY:'auto',maxHeight:_this2.state.height*0.5})});}}}},['Global','Asia','Europe','North America','Oceania',null].map(function(continent){return Object.keys(mapText).filter(function(map){return mapText[map].continent===continent||mapText[map].continent&&mapText[map].continent['en']===continent;}).map(function(map,idx){return/*#__PURE__*/React.createElement(Fragment,{key:\"map-\".concat(idx)},map===str.TRANSMISSION?/*#__PURE__*/React.createElement(DropdownItem,{divider:true}):/*#__PURE__*/React.createElement(\"div\",null),idx===0&&continent!=null&&continent!=='Global'?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(DropdownItem,{divider:true}),/*#__PURE__*/React.createElement(DropdownItem,{header:true},mapText[map].continent[lang])):/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(DropdownItem,{className:currentMap===map?'current':'',onClick:function onClick(){return _this2.mapToggle(map);}},map!==str.TRANSMISSION&&/*#__PURE__*/React.createElement(\"span\",{className:\"flag-icon \".concat(mapText[map].flagCode?'flag-icon-'+mapText[map].flagCode:'')}),mapText[map].title[lang]));});}))));}}]);return MapNavBar;}(Component);export{MapNavBar as default};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/MapNavBar.js"],"names":["React","Component","Fragment","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","FiMap","metricText","mapText","str","plotTypes","MapNavBar","state","dropdownOpen","height","updateHeight","window","innerHeight","document","documentElement","clientHeight","body","setState","mapToggle","map","props","currentMap","CHINA_MAP1","CHINA_MAP2","regionToggle","CHINA_ZH","US_MAP","US_MAP2","US_ZH","TRANSMISSION","regionName","metricToggle","event","newMetric","target","getAttribute","metric","addEventListener","removeEventListener","lang","fullPlot","plotType","metricChange","count","marginRight","title","setMaxHeight","enabled","order","fn","data","styles","overflowY","maxHeight","continent","Object","keys","filter","idx","flagCode"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { FiMap } from 'react-icons/fi'\r\nimport 'flag-icon-css/css/flag-icon.min.css'\r\nimport { metricText } from '../utils/utils'\r\nimport { mapText } from '../utils/map_text'\r\nimport * as str from '../utils/strings'\r\nimport { plotTypes } from '../utils/plot_types'\r\n\r\nexport default class MapNavBar extends Component {\r\n    state = {\r\n        dropdownOpen: false,\r\n        height: -1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateHeight()\r\n        window.addEventListener('resize', this.updateHeight)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateHeight)\r\n    }\r\n\r\n    updateHeight = () => {\r\n        const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n        this.setState({ height })\r\n    }\r\n\r\n    mapToggle = (map) => {\r\n        if (map !== this.props.currentMap) {\r\n            this.props.mapToggle(map)\r\n            if (map === str.CHINA_MAP1 || map === str.CHINA_MAP2) {\r\n                if (this.props.currentMap !== str.CHINA_MAP1 && this.props.currentMap !== str.CHINA_MAP2)\r\n                    this.props.regionToggle([ str.CHINA_ZH ], false)\r\n            } else if (map === str.US_MAP || map === str.US_MAP2) {\r\n                if (this.props.currentMap !== str.US_MAP && this.props.currentMap !== str.US_MAP2)\r\n                    this.props.regionToggle([ str.US_ZH ], false)\r\n            } else if (map !== str.TRANSMISSION) {\r\n                this.props.regionToggle([ mapText[map].regionName ], false)\r\n            }\r\n        }\r\n        this.setState({ dropdownOpen: !this.state.dropdownOpen })\r\n    }\r\n\r\n    metricToggle = (event) => {\r\n        const newMetric = event.target.getAttribute('value')\r\n        if (newMetric !== this.props.metric) this.props.metricToggle(newMetric)\r\n    }\r\n\r\n    render() {\r\n        const { lang, metric, currentMap, fullPlot, plotType } = this.props\r\n\r\n        return (\r\n            <div className={`map-nav-bar-wrap ${fullPlot && !plotTypes[plotType].metricChange ? 'grey-out' : ''}`}>\r\n                <ul className=\"map-nav-bar\">\r\n                    {[ 'confirmedCount', 'deadCount', 'curedCount' ].map((count) => (\r\n                        <li key={`map-nav-${count}`} className={count === metric ? 'current' : ''}>\r\n                            <div value={count} onClick={this.metricToggle}>\r\n                                {metricText[count][lang]}\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                {!fullPlot && (\r\n                    <UncontrolledDropdown className=\"map-toggle\">\r\n                        <DropdownToggle\r\n                            className=\"map-toggle-button\"\r\n                            tag=\"span\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-expanded={this.state.dropdownOpen}\r\n                        >\r\n                            <FiMap size={14} style={{ marginRight: 10 }} />\r\n                            <span>{mapText[currentMap].title[lang]}</span>\r\n                        </DropdownToggle>\r\n                        <DropdownMenu\r\n                            modifiers={{\r\n                                setMaxHeight: {\r\n                                    enabled: true,\r\n                                    order: 890,\r\n                                    fn: (data) => {\r\n                                        return {\r\n                                            ...data,\r\n                                            styles: {\r\n                                                ...data.styles,\r\n                                                overflowY: 'auto',\r\n                                                maxHeight: this.state.height * 0.5\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }}\r\n                        >\r\n                            {[ 'Global', 'Asia', 'Europe', 'North America', 'Oceania', null ].map((continent) =>\r\n                                Object.keys(mapText)\r\n                                    .filter(\r\n                                        (map) =>\r\n                                            mapText[map].continent === continent ||\r\n                                            (mapText[map].continent && mapText[map].continent['en'] === continent)\r\n                                    )\r\n                                    .map((map, idx) => {\r\n                                        return (\r\n                                            <Fragment key={`map-${idx}`}>\r\n                                                {map === str.TRANSMISSION ? <DropdownItem divider /> : <div />}\r\n                                                {idx === 0 && continent != null && continent !== 'Global' ? (\r\n                                                    <Fragment>\r\n                                                        <DropdownItem divider />\r\n                                                        <DropdownItem header>\r\n                                                            {mapText[map].continent[lang]}\r\n                                                        </DropdownItem>\r\n                                                    </Fragment>\r\n                                                ) : (\r\n                                                    <div />\r\n                                                )}\r\n                                                <DropdownItem\r\n                                                    className={currentMap === map ? 'current' : ''}\r\n                                                    onClick={() => this.mapToggle(map)}\r\n                                                >\r\n                                                    {map !== str.TRANSMISSION && (\r\n                                                        <span\r\n                                                            className={`flag-icon ${mapText[map].flagCode\r\n                                                                ? 'flag-icon-' + mapText[map].flagCode\r\n                                                                : ''}`}\r\n                                                        />\r\n                                                    )}\r\n                                                    {mapText[map].title[lang]}\r\n                                                </DropdownItem>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                            )}\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}