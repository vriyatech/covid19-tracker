{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\src\\\\utils\\\\plot_types.js\";\nimport React from 'react';\nimport format from 'date-fns/format';\nimport i18n from '../data/i18n.yml';\nimport { parseDate, formatDate } from './utils';\n\nconst integerFormat = e => parseInt(e, 10) !== e ? '' : Math.abs(e) < 1000 ? e : Math.abs(e) < 10 ** 6 ? `${e / 1000}K` : Math.abs(e) < 10 ** 9 ? `${e / 10 ** 6}M` : `${e / 10 ** 9}B`;\n\nconst absIntegerFormat = e => parseInt(e, 10) !== e ? '' : Math.abs(e) < 1000 ? Math.abs(e) : `${Math.abs(e) / 1000}K`;\n\nconst streamTimeFormat = (idx, interval, dates) => idx % interval === 0 ? format(parseDate(dates[idx]), 'M/d') : '';\n\nconst fatalityTooltip = (yLabel, xLabel) => ({\n  point\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"plot-tooltip plot-tooltip-line\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: point.data.name || point.data.regionName ? 'plot-tooltip-bold' : '',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n}, point.data.name ? `${point.data.name} ${point.data.years ? '(' + point.data.years + ')' : ''}` : point.data.regionName ? point.data.regionName : formatDate(point.data.date, point.data.lang)), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}, yLabel[point.data.lang]), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"plot-tooltip-bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n}, ` ${point.data.yFormatted}`)), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }\n}, xLabel[point.data.lang]), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"plot-tooltip-bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }\n}, ` ${point.data.xFormatted}`)));\n\nconst regionLegends = {\n  anchor: 'right',\n  direction: 'column',\n  translateX: 100,\n  itemWidth: 90,\n  itemHeight: 20,\n  itemTextColor: '#000',\n  symbolSize: 12,\n  symbolShape: 'circle'\n};\nexport const getSpecificPlotType = (plotType, plotDetails) => {\n  let specificType = '';\n\n  if (plotType === 'plot_basic') {\n    specificType = plotDetails.stats === 'cumulative' ? 'total' : 'new';\n  } else if (plotType === 'plot_fatality_recovery') {\n    specificType = 'fatality_recovery';\n  } else if (plotType === 'plot_growth') {\n    specificType = plotDetails.stats === 'cumulative' ? 'growth_total' : 'growth_new';\n  } else if (plotType === 'plot_one_vs_rest') {\n    specificType = plotDetails.stats === 'cumulative' ? 'one_vs_rest' : 'one_vs_rest_new';\n  } else if (plotType === 'plot_fatality_line') {\n    if (plotDetails.diseaseComparison === 'show') specificType = plotDetails.fatalityLine === 'rate' ? 'fatality_line' : 'fatality_line2';\n    if (plotDetails.diseaseComparison === 'hide') specificType = plotDetails.fatalityLine === 'rate' ? 'fatality_line_only' : 'fatality_line2_only';\n  } else if (plotType === 'plot_ranking') {\n    specificType = plotDetails.stats === 'cumulative' ? 'most_affected_subregions' : 'most_affected_subregions_new';\n  } else if (plotType === 'plot_subregion_basic') {\n    specificType = plotDetails.stats === 'cumulative' ? 'subregion_total' : 'subregion_new';\n  } else if (plotType === 'plot_subregion_stream') {\n    specificType = plotDetails.stats === 'cumulative' ? 'subregion_total_stream' : 'subregion_new_stream';\n  } else if (plotType === 'plot_subregion_active_stream') {\n    specificType = 'subregion_active_stream';\n  } else if (plotType === 'plot_subregion_fatality') {\n    if (plotDetails.diseaseComparison === 'show') specificType = plotDetails.fatalityLine === 'rate' ? 'subregion_fatality' : 'subregion_fatality2';\n    if (plotDetails.diseaseComparison === 'hide') specificType = plotDetails.fatalityLine === 'rate' ? 'subregion_fatality_only' : 'subregion_fatality2_only';\n  }\n\n  return specificType;\n};\nexport const plotTypes = {\n  plot_basic: {\n    subregions: false,\n    metricChange: false,\n    statsChange: true,\n    scaleChange: true,\n    movingAverage: true,\n    text: i18n.CASES\n  },\n  plot_fatality_recovery: {\n    subregions: false,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    movingAverage: true,\n    text: i18n.FATALITY_RECOVERY_RATE\n  },\n  plot_growth: {\n    subregions: false,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: false,\n    movingAverage: true,\n    text: i18n.GROWTH_RATE\n  },\n  plot_one_vs_rest: {\n    subregions: false,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: true,\n    movingAverage: true,\n    text: i18n.ONE_VS_REST\n  },\n  plot_fatality_line: {\n    subregions: false,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    text: i18n.FATALITY_LINE\n  },\n  plot_ranking: {\n    subregions: true,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: false,\n    text: i18n.MOST_AFFECTED_SUBREGIONS\n  },\n  plot_subregion_basic: {\n    subregions: true,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: true,\n    movingAverage: true,\n    text: i18n.SUBREGION\n  },\n  plot_subregion_stream: {\n    subregions: true,\n    metricChange: true,\n    statsChange: true,\n    scaleChange: false,\n    text: i18n.SUBREGION_STREAM\n  },\n  plot_subregion_active_stream: {\n    subregions: false,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    text: i18n.SUBREGION_ACTIVE_STREAM\n  },\n  plot_subregion_fatality: {\n    subregions: true,\n    metricChange: false,\n    statsChange: false,\n    scaleChange: false,\n    text: i18n.SUBREGION_FATALITY\n  }\n};\nexport const plotSpecificTypes = {\n  total: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: '%-m/%-d',\n    yFormat: ',d',\n    log: true,\n    legendItemWidth: 100\n  },\n  new: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: '%-m/%-d',\n    yFormat: ',d',\n    log: false,\n    legendItemWidth: 100\n  },\n  fatality_recovery: {\n    type: 'line',\n    yAxisFormat: '.2%',\n    xAxisFormat: '%-m/%-d',\n    yFormat: '.2%',\n    log: false,\n    legendItemWidth: 150\n  },\n  growth_total: {\n    type: 'line',\n    yAxisFormat: '.0%',\n    xAxisFormat: '%-m/%-d',\n    yFormat: '.2%',\n    log: false,\n    legendItemWidth: 50,\n    yScale: {\n      type: 'linear',\n      min: 0,\n      max: 1\n    }\n  },\n  growth_new: {\n    type: 'line',\n    yAxisFormat: '.0%',\n    xAxisFormat: '%-m/%-d',\n    yFormat: '.2%',\n    log: false,\n    legendItemWidth: 50,\n    yScale: {\n      type: 'linear',\n      min: -2,\n      max: 2\n    }\n  },\n  one_vs_rest: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: '%-m/%-d',\n    log: true,\n    legendItemWidth: 150\n  },\n  one_vs_rest_new: {\n    type: 'line',\n    yAxisFormat: integerFormat,\n    xAxisFormat: '%-m/%-d',\n    log: false,\n    legendItemWidth: 150\n  },\n  fatality_line: {\n    type: 'line',\n    xFormat: ',d',\n    yFormat: '.2%',\n    xScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 9\n    },\n    yScale: {\n      type: 'linear',\n      min: 0,\n      max: 0.4\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: '.0%',\n    legends: [],\n    hideMarkers: true,\n    pointSize: 4,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [0, 0.1, 0.2, 0.3, 0.4],\n    xTickRotation: 0,\n    xLegend: i18n.INFECTION_NUMBER,\n    yLegend: i18n.FATALITY_RATE,\n    enablePointLabel: true,\n    enableSlices: false,\n    pointLabel: x => x.name,\n    tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.INFECTION_NUMBER)\n  },\n  fatality_line2: {\n    type: 'line',\n    xFormat: ',d',\n    yFormat: ',d',\n    xScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 9\n    },\n    yScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 8\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: integerFormat,\n    legends: [],\n    hideMarkers: true,\n    pointSize: 4,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [...Array(9).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.INFECTION_NUMBER,\n    yLegend: i18n.DEATH_NUMBER,\n    enablePointLabel: true,\n    enableSlices: false,\n    pointLabel: x => x.name === '中东呼吸综合征' ? `${x.name}${'　'.repeat(8)}` : x.name === 'MERS' ? `${x.name}${'　'.repeat(3)}` : x.name,\n    tooltip: fatalityTooltip(i18n.DEATH_NUMBER, i18n.INFECTION_NUMBER)\n  },\n  fatality_line_only: {\n    type: 'line',\n    xFormat: ',d',\n    yFormat: '.2%',\n    xScale: {\n      type: 'log',\n      min: 'auto',\n      max: 'auto'\n    },\n    yScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto'\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: '.2%',\n    legends: [],\n    hideMarkers: true,\n    pointSize: 4,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.INFECTION_NUMBER,\n    yLegend: i18n.FATALITY_RATE,\n    enablePointLabel: false,\n    enableSlices: false,\n    tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.INFECTION_NUMBER)\n  },\n  fatality_line2_only: {\n    type: 'line',\n    xFormat: ',d',\n    yFormat: ',d',\n    xScale: {\n      type: 'log',\n      min: 'auto',\n      max: 'auto'\n    },\n    yScale: {\n      type: 'log',\n      min: 'auto',\n      max: 'auto'\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: integerFormat,\n    legends: [],\n    hideMarkers: true,\n    pointSize: 4,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [...Array(9).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.INFECTION_NUMBER,\n    yLegend: i18n.DEATH_NUMBER,\n    enablePointLabel: false,\n    enableSlices: false,\n    tooltip: fatalityTooltip(i18n.DEATH_NUMBER, i18n.INFECTION_NUMBER)\n  },\n  most_affected_subregions: {\n    type: 'bump',\n    log: false,\n    tooltip: ({\n      serie\n    }) => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip plot-tooltip-bump\",\n      style: {\n        color: serie.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, serie.fullId, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, ` ${serie.count}`))\n  },\n  most_affected_subregions_new: {\n    type: 'bump',\n    log: false,\n    tooltip: ({\n      serie\n    }) => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip plot-tooltip-bump\",\n      style: {\n        color: serie.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }\n    }, serie.fullId, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, ` ${serie.count}`))\n  },\n  subregion_total: {\n    type: 'line',\n    margin: {\n      right: 115,\n      bottom: 30\n    },\n    yAxisFormat: integerFormat,\n    xAxisFormat: '%-m/%-d',\n    yFormat: ',d',\n    log: true,\n    pointSize: 0,\n    enableSlices: false,\n    legends: [regionLegends],\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 12,\n        width: 12,\n        backgroundColor: point.color,\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }, point.serieId)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }\n    }, formatDate(point.data.xFormatted, point.data.lang)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, ` ${point.data.yFormatted}`)))\n  },\n  subregion_new: {\n    type: 'line',\n    margin: {\n      right: 115,\n      bottom: 30\n    },\n    yAxisFormat: integerFormat,\n    xAxisFormat: '%-m/%-d',\n    yFormat: ',d',\n    log: false,\n    pointSize: 0,\n    enableSlices: false,\n    legends: [regionLegends],\n    tooltip: ({\n      point\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip plot-tooltip-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plot-tooltip-bold\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 12,\n        width: 12,\n        backgroundColor: point.color,\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }\n    }, point.serieId)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, formatDate(point.data.xFormatted, point.data.lang)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-tooltip-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }\n    }, ` ${point.data.yFormatted}`)))\n  },\n  subregion_total_stream: {\n    type: 'stream',\n    yAxisFormat: absIntegerFormat,\n    xAxisFormat: streamTimeFormat,\n    log: false,\n    legends: [regionLegends]\n  },\n  subregion_new_stream: {\n    type: 'stream',\n    yAxisFormat: absIntegerFormat,\n    xAxisFormat: streamTimeFormat,\n    log: false,\n    legends: [regionLegends]\n  },\n  subregion_active_stream: {\n    type: 'stream',\n    yAxisFormat: absIntegerFormat,\n    xAxisFormat: streamTimeFormat,\n    log: false,\n    legends: [regionLegends]\n  },\n  subregion_fatality: {\n    type: 'line',\n    subregions: true,\n    log: false,\n    xLog: true,\n    margin: {\n      left: 60\n    },\n    xFormat: ',d',\n    yFormat: '.2%',\n    xScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 9\n    },\n    yScale: {\n      type: 'linear',\n      min: 0,\n      max: 0.4\n    },\n    xAxisFormat: integerFormat,\n    yAxisFormat: '.1%',\n    legends: [],\n    hideMarkers: true,\n    pointSize: 10,\n    pointBorderWidth: 2,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [0, 0.1, 0.2, 0.3, 0.4],\n    xTickRotation: 0,\n    xLegend: i18n.CONFIRMED,\n    yLegend: i18n.FATALITY_RATE,\n    yLegendOffset: -50,\n    enablePointLabel: true,\n    enableSlices: false,\n    pointLabelYOffset: -10,\n    pointLabel: x => x.name,\n    tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.CONFIRMED)\n  },\n  subregion_fatality2: {\n    type: 'line',\n    subregions: true,\n    log: false,\n    xLog: true,\n    xScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 9\n    },\n    yScale: {\n      type: 'log',\n      min: 1,\n      max: 10 ** 8\n    },\n    margin: {\n      left: 60\n    },\n    xFormat: ',d',\n    yFormat: ',d',\n    xAxisFormat: integerFormat,\n    yAxisFormat: integerFormat,\n    legends: [],\n    hideMarkers: true,\n    pointSize: 10,\n    pointBorderWidth: 2,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [...Array(9).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.CONFIRMED,\n    yLegend: i18n.DEATHS,\n    yLegendOffset: -50,\n    enablePointLabel: true,\n    enableSlices: false,\n    pointLabelYOffset: -10,\n    pointLabel: x => x.name === '中东呼吸综合征' ? `${x.name}${'　'.repeat(8)}` : x.name === 'MERS' ? `${x.name}${'　'.repeat(3)}` : x.name,\n    tooltip: fatalityTooltip(i18n.DEATHS, i18n.CONFIRMED)\n  },\n  subregion_fatality_only: {\n    type: 'line',\n    subregions: true,\n    log: false,\n    xLog: true,\n    margin: {\n      left: 60\n    },\n    xFormat: ',d',\n    yFormat: '.2%',\n    xAxisFormat: integerFormat,\n    yAxisFormat: '.1%',\n    legends: [],\n    hideMarkers: true,\n    pointSize: 10,\n    pointBorderWidth: 2,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.CONFIRMED,\n    yLegend: i18n.FATALITY_RATE,\n    yLegendOffset: -50,\n    enablePointLabel: false,\n    enableSlices: false,\n    tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.CONFIRMED)\n  },\n  subregion_fatality2_only: {\n    type: 'line',\n    subregions: true,\n    log: false,\n    xLog: true,\n    yScale: {\n      type: 'log',\n      min: 'auto',\n      max: 'auto'\n    },\n    margin: {\n      left: 60\n    },\n    xFormat: ',d',\n    yFormat: ',d',\n    xAxisFormat: integerFormat,\n    yAxisFormat: integerFormat,\n    legends: [],\n    hideMarkers: true,\n    pointSize: 10,\n    pointBorderWidth: 2,\n    xTickValues: [...Array(10).keys()].map(x => 10 ** x),\n    yTickValues: [...Array(9).keys()].map(x => 10 ** x),\n    xTickRotation: 0,\n    xLegend: i18n.CONFIRMED,\n    yLegend: i18n.DEATHS,\n    yLegendOffset: -50,\n    enablePointLabel: false,\n    enableSlices: false,\n    tooltip: fatalityTooltip(i18n.DEATHS, i18n.CONFIRMED)\n  }\n};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/utils/plot_types.js"],"names":["React","format","i18n","parseDate","formatDate","integerFormat","e","parseInt","Math","abs","absIntegerFormat","streamTimeFormat","idx","interval","dates","fatalityTooltip","yLabel","xLabel","point","data","name","regionName","years","date","lang","yFormatted","xFormatted","regionLegends","anchor","direction","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","getSpecificPlotType","plotType","plotDetails","specificType","stats","diseaseComparison","fatalityLine","plotTypes","plot_basic","subregions","metricChange","statsChange","scaleChange","movingAverage","text","CASES","plot_fatality_recovery","FATALITY_RECOVERY_RATE","plot_growth","GROWTH_RATE","plot_one_vs_rest","ONE_VS_REST","plot_fatality_line","FATALITY_LINE","plot_ranking","MOST_AFFECTED_SUBREGIONS","plot_subregion_basic","SUBREGION","plot_subregion_stream","SUBREGION_STREAM","plot_subregion_active_stream","SUBREGION_ACTIVE_STREAM","plot_subregion_fatality","SUBREGION_FATALITY","plotSpecificTypes","total","type","yAxisFormat","xAxisFormat","yFormat","log","legendItemWidth","new","fatality_recovery","growth_total","yScale","min","max","growth_new","one_vs_rest","one_vs_rest_new","fatality_line","xFormat","xScale","legends","hideMarkers","pointSize","xTickValues","Array","keys","map","x","yTickValues","xTickRotation","xLegend","INFECTION_NUMBER","yLegend","FATALITY_RATE","enablePointLabel","enableSlices","pointLabel","tooltip","fatality_line2","DEATH_NUMBER","repeat","fatality_line_only","fatality_line2_only","most_affected_subregions","serie","color","fullId","count","most_affected_subregions_new","subregion_total","margin","right","bottom","display","justifyContent","alignItems","height","width","backgroundColor","marginRight","serieId","subregion_new","subregion_total_stream","subregion_new_stream","subregion_active_stream","subregion_fatality","xLog","left","pointBorderWidth","CONFIRMED","yLegendOffset","pointLabelYOffset","subregion_fatality2","DEATHS","subregion_fatality_only","subregion_fatality2_only"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport format from 'date-fns/format'\r\nimport i18n from '../data/i18n.yml'\r\nimport { parseDate, formatDate } from './utils'\r\n\r\nconst integerFormat = (e) =>\r\n    parseInt(e, 10) !== e\r\n        ? ''\r\n        : Math.abs(e) < 1000\r\n          ? e\r\n          : Math.abs(e) < 10 ** 6 ? `${e / 1000}K` : Math.abs(e) < 10 ** 9 ? `${e / 10 ** 6}M` : `${e / 10 ** 9}B`\r\n\r\nconst absIntegerFormat = (e) =>\r\n    parseInt(e, 10) !== e ? '' : Math.abs(e) < 1000 ? Math.abs(e) : `${Math.abs(e) / 1000}K`\r\n\r\nconst streamTimeFormat = (idx, interval, dates) => (idx % interval === 0 ? format(parseDate(dates[idx]), 'M/d') : '')\r\n\r\nconst fatalityTooltip = (yLabel, xLabel) => ({ point }) => (\r\n    <div className=\"plot-tooltip plot-tooltip-line\">\r\n        <div className={point.data.name || point.data.regionName ? 'plot-tooltip-bold' : ''}>\r\n            {point.data.name ? (\r\n                `${point.data.name} ${point.data.years ? '(' + point.data.years + ')' : ''}`\r\n            ) : point.data.regionName ? (\r\n                point.data.regionName\r\n            ) : (\r\n                formatDate(point.data.date, point.data.lang)\r\n            )}\r\n        </div>\r\n        <div>\r\n            <span>{yLabel[point.data.lang]}</span>\r\n            <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\r\n        </div>\r\n        <div>\r\n            <span>{xLabel[point.data.lang]}</span>\r\n            <span className=\"plot-tooltip-bold\">{` ${point.data.xFormatted}`}</span>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst regionLegends = {\r\n    anchor: 'right',\r\n    direction: 'column',\r\n    translateX: 100,\r\n    itemWidth: 90,\r\n    itemHeight: 20,\r\n    itemTextColor: '#000',\r\n    symbolSize: 12,\r\n    symbolShape: 'circle'\r\n}\r\n\r\nexport const getSpecificPlotType = (plotType, plotDetails) => {\r\n    let specificType = ''\r\n    if (plotType === 'plot_basic') {\r\n        specificType = plotDetails.stats === 'cumulative' ? 'total' : 'new'\r\n    } else if (plotType === 'plot_fatality_recovery') {\r\n        specificType = 'fatality_recovery'\r\n    } else if (plotType === 'plot_growth') {\r\n        specificType = plotDetails.stats === 'cumulative' ? 'growth_total' : 'growth_new'\r\n    } else if (plotType === 'plot_one_vs_rest') {\r\n        specificType = plotDetails.stats === 'cumulative' ? 'one_vs_rest' : 'one_vs_rest_new'\r\n    } else if (plotType === 'plot_fatality_line') {\r\n        if (plotDetails.diseaseComparison === 'show')\r\n            specificType = plotDetails.fatalityLine === 'rate' ? 'fatality_line' : 'fatality_line2'\r\n        if (plotDetails.diseaseComparison === 'hide')\r\n            specificType = plotDetails.fatalityLine === 'rate' ? 'fatality_line_only' : 'fatality_line2_only'\r\n    } else if (plotType === 'plot_ranking') {\r\n        specificType = plotDetails.stats === 'cumulative' ? 'most_affected_subregions' : 'most_affected_subregions_new'\r\n    } else if (plotType === 'plot_subregion_basic') {\r\n        specificType = plotDetails.stats === 'cumulative' ? 'subregion_total' : 'subregion_new'\r\n    } else if (plotType === 'plot_subregion_stream') {\r\n        specificType = plotDetails.stats === 'cumulative' ? 'subregion_total_stream' : 'subregion_new_stream'\r\n    } else if (plotType === 'plot_subregion_active_stream') {\r\n        specificType = 'subregion_active_stream'\r\n    } else if (plotType === 'plot_subregion_fatality') {\r\n        if (plotDetails.diseaseComparison === 'show')\r\n            specificType = plotDetails.fatalityLine === 'rate' ? 'subregion_fatality' : 'subregion_fatality2'\r\n        if (plotDetails.diseaseComparison === 'hide')\r\n            specificType = plotDetails.fatalityLine === 'rate' ? 'subregion_fatality_only' : 'subregion_fatality2_only'\r\n    }\r\n\r\n    return specificType\r\n}\r\n\r\nexport const plotTypes = {\r\n    plot_basic: {\r\n        subregions: false,\r\n        metricChange: false,\r\n        statsChange: true,\r\n        scaleChange: true,\r\n        movingAverage: true,\r\n        text: i18n.CASES\r\n    },\r\n    plot_fatality_recovery: {\r\n        subregions: false,\r\n        metricChange: false,\r\n        statsChange: false,\r\n        scaleChange: false,\r\n        movingAverage: true,\r\n        text: i18n.FATALITY_RECOVERY_RATE\r\n    },\r\n    plot_growth: {\r\n        subregions: false,\r\n        metricChange: true,\r\n        statsChange: true,\r\n        scaleChange: false,\r\n        movingAverage: true,\r\n        text: i18n.GROWTH_RATE\r\n    },\r\n    plot_one_vs_rest: {\r\n        subregions: false,\r\n        metricChange: true,\r\n        statsChange: true,\r\n        scaleChange: true,\r\n        movingAverage: true,\r\n        text: i18n.ONE_VS_REST\r\n    },\r\n    plot_fatality_line: {\r\n        subregions: false,\r\n        metricChange: false,\r\n        statsChange: false,\r\n        scaleChange: false,\r\n        text: i18n.FATALITY_LINE\r\n    },\r\n    plot_ranking: {\r\n        subregions: true,\r\n        metricChange: true,\r\n        statsChange: true,\r\n        scaleChange: false,\r\n        text: i18n.MOST_AFFECTED_SUBREGIONS\r\n    },\r\n    plot_subregion_basic: {\r\n        subregions: true,\r\n        metricChange: true,\r\n        statsChange: true,\r\n        scaleChange: true,\r\n        movingAverage: true,\r\n        text: i18n.SUBREGION\r\n    },\r\n    plot_subregion_stream: {\r\n        subregions: true,\r\n        metricChange: true,\r\n        statsChange: true,\r\n        scaleChange: false,\r\n        text: i18n.SUBREGION_STREAM\r\n    },\r\n    plot_subregion_active_stream: {\r\n        subregions: false,\r\n        metricChange: false,\r\n        statsChange: false,\r\n        scaleChange: false,\r\n        text: i18n.SUBREGION_ACTIVE_STREAM\r\n    },\r\n    plot_subregion_fatality: {\r\n        subregions: true,\r\n        metricChange: false,\r\n        statsChange: false,\r\n        scaleChange: false,\r\n        text: i18n.SUBREGION_FATALITY\r\n    }\r\n}\r\n\r\nexport const plotSpecificTypes = {\r\n    total: {\r\n        type: 'line',\r\n        yAxisFormat: integerFormat,\r\n        xAxisFormat: '%-m/%-d',\r\n        yFormat: ',d',\r\n        log: true,\r\n        legendItemWidth: 100\r\n    },\r\n    new: {\r\n        type: 'line',\r\n        yAxisFormat: integerFormat,\r\n        xAxisFormat: '%-m/%-d',\r\n        yFormat: ',d',\r\n        log: false,\r\n        legendItemWidth: 100\r\n    },\r\n    fatality_recovery: {\r\n        type: 'line',\r\n        yAxisFormat: '.2%',\r\n        xAxisFormat: '%-m/%-d',\r\n        yFormat: '.2%',\r\n        log: false,\r\n        legendItemWidth: 150\r\n    },\r\n    growth_total: {\r\n        type: 'line',\r\n        yAxisFormat: '.0%',\r\n        xAxisFormat: '%-m/%-d',\r\n        yFormat: '.2%',\r\n        log: false,\r\n        legendItemWidth: 50,\r\n        yScale: {\r\n            type: 'linear',\r\n            min: 0,\r\n            max: 1\r\n        }\r\n    },\r\n    growth_new: {\r\n        type: 'line',\r\n        yAxisFormat: '.0%',\r\n        xAxisFormat: '%-m/%-d',\r\n        yFormat: '.2%',\r\n        log: false,\r\n        legendItemWidth: 50,\r\n        yScale: {\r\n            type: 'linear',\r\n            min: -2,\r\n            max: 2\r\n        }\r\n    },\r\n    one_vs_rest: {\r\n        type: 'line',\r\n        yAxisFormat: integerFormat,\r\n        xAxisFormat: '%-m/%-d',\r\n        log: true,\r\n        legendItemWidth: 150\r\n    },\r\n    one_vs_rest_new: {\r\n        type: 'line',\r\n        yAxisFormat: integerFormat,\r\n        xAxisFormat: '%-m/%-d',\r\n        log: false,\r\n        legendItemWidth: 150\r\n    },\r\n    fatality_line: {\r\n        type: 'line',\r\n        xFormat: ',d',\r\n        yFormat: '.2%',\r\n        xScale: {\r\n            type: 'log',\r\n            min: 1,\r\n            max: 10 ** 9\r\n        },\r\n        yScale: {\r\n            type: 'linear',\r\n            min: 0,\r\n            max: 0.4\r\n        },\r\n        xAxisFormat: integerFormat,\r\n        yAxisFormat: '.0%',\r\n        legends: [],\r\n        hideMarkers: true,\r\n        pointSize: 4,\r\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\r\n        yTickValues: [ 0, 0.1, 0.2, 0.3, 0.4 ],\r\n        xTickRotation: 0,\r\n        xLegend: i18n.INFECTION_NUMBER,\r\n        yLegend: i18n.FATALITY_RATE,\r\n        enablePointLabel: true,\r\n        enableSlices: false,\r\n        pointLabel: (x) => x.name,\r\n        tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.INFECTION_NUMBER)\r\n    },\r\n    fatality_line2: {\r\n        type: 'line',\r\n        xFormat: ',d',\r\n        yFormat: ',d',\r\n        xScale: {\r\n            type: 'log',\r\n            min: 1,\r\n            max: 10 ** 9\r\n        },\r\n        yScale: {\r\n            type: 'log',\r\n            min: 1,\r\n            max: 10 ** 8\r\n        },\r\n        xAxisFormat: integerFormat,\r\n        yAxisFormat: integerFormat,\r\n        legends: [],\r\n        hideMarkers: true,\r\n        pointSize: 4,\r\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\r\n        yTickValues: [ ...Array(9).keys() ].map((x) => 10 ** x),\r\n        xTickRotation: 0,\r\n        xLegend: i18n.INFECTION_NUMBER,\r\n        yLegend: i18n.DEATH_NUMBER,\r\n        enablePointLabel: true,\r\n        enableSlices: false,\r\n        pointLabel: (x) =>\r\n            x.name === '中东呼吸综合征'\r\n                ? `${x.name}${'　'.repeat(8)}`\r\n                : x.name === 'MERS' ? `${x.name}${'　'.repeat(3)}` : x.name,\r\n        tooltip: fatalityTooltip(i18n.DEATH_NUMBER, i18n.INFECTION_NUMBER)\r\n    },\r\n    fatality_line_only: {\r\n        type: 'line',\r\n        xFormat: ',d',\r\n        yFormat: '.2%',\r\n        xScale: {\r\n            type: 'log',\r\n            min: 'auto',\r\n            max: 'auto'\r\n        },\r\n        yScale: {\r\n            type: 'linear',\r\n            min: 'auto',\r\n            max: 'auto'\r\n        },\r\n        xAxisFormat: integerFormat,\r\n        yAxisFormat: '.2%',\r\n        legends: [],\r\n        hideMarkers: true,\r\n        pointSize: 4,\r\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\r\n        xTickRotation: 0,\r\n        xLegend: i18n.INFECTION_NUMBER,\r\n        yLegend: i18n.FATALITY_RATE,\r\n        enablePointLabel: false,\r\n        enableSlices: false,\r\n        tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.INFECTION_NUMBER)\r\n    },\r\n    fatality_line2_only: {\r\n        type: 'line',\r\n        xFormat: ',d',\r\n        yFormat: ',d',\r\n        xScale: {\r\n            type: 'log',\r\n            min: 'auto',\r\n            max: 'auto'\r\n        },\r\n        yScale: {\r\n            type: 'log',\r\n            min: 'auto',\r\n            max: 'auto'\r\n        },\r\n        xAxisFormat: integerFormat,\r\n        yAxisFormat: integerFormat,\r\n        legends: [],\r\n        hideMarkers: true,\r\n        pointSize: 4,\r\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\r\n        yTickValues: [ ...Array(9).keys() ].map((x) => 10 ** x),\r\n        xTickRotation: 0,\r\n        xLegend: i18n.INFECTION_NUMBER,\r\n        yLegend: i18n.DEATH_NUMBER,\r\n        enablePointLabel: false,\r\n        enableSlices: false,\r\n        tooltip: fatalityTooltip(i18n.DEATH_NUMBER, i18n.INFECTION_NUMBER)\r\n    },\r\n    most_affected_subregions: {\r\n        type: 'bump',\r\n        log: false,\r\n        tooltip: ({ serie }) => (\r\n            <span className=\"plot-tooltip plot-tooltip-bump\" style={{ color: serie.color }}>\r\n                {serie.fullId}\r\n                <span className=\"plot-tooltip-bold\">{` ${serie.count}`}</span>\r\n            </span>\r\n        )\r\n    },\r\n    most_affected_subregions_new: {\r\n        type: 'bump',\r\n        log: false,\r\n        tooltip: ({ serie }) => (\r\n            <span className=\"plot-tooltip plot-tooltip-bump\" style={{ color: serie.color }}>\r\n                {serie.fullId}\r\n                <span className=\"plot-tooltip-bold\">{` ${serie.count}`}</span>\r\n            </span>\r\n        )\r\n    },\r\n    subregion_total: {\r\n        type: 'line',\r\n        margin: { right: 115, bottom: 30 },\r\n        yAxisFormat: integerFormat,\r\n        xAxisFormat: '%-m/%-d',\r\n        yFormat: ',d',\r\n        log: true,\r\n        pointSize: 0,\r\n        enableSlices: false,\r\n        legends: [ regionLegends ],\r\n        tooltip: ({ point }) => (\r\n            <div className=\"plot-tooltip plot-tooltip-line\">\r\n                <div\r\n                    className=\"plot-tooltip-bold\"\r\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n                >\r\n                    <span>\r\n                        <div style={{ height: 12, width: 12, backgroundColor: point.color, marginRight: 5 }} />\r\n                    </span>\r\n                    <span>{point.serieId}</span>\r\n                </div>\r\n                <div>\r\n                    <span>{formatDate(point.data.xFormatted, point.data.lang)}</span>\r\n                    <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    subregion_new: {\r\n        type: 'line',\r\n        margin: { right: 115, bottom: 30 },\r\n        yAxisFormat: integerFormat,\r\n        xAxisFormat: '%-m/%-d',\r\n        yFormat: ',d',\r\n        log: false,\r\n        pointSize: 0,\r\n        enableSlices: false,\r\n        legends: [ regionLegends ],\r\n        tooltip: ({ point }) => (\r\n            <div className=\"plot-tooltip plot-tooltip-line\">\r\n                <div\r\n                    className=\"plot-tooltip-bold\"\r\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n                >\r\n                    <span>\r\n                        <div style={{ height: 12, width: 12, backgroundColor: point.color, marginRight: 5 }} />\r\n                    </span>\r\n                    <span>{point.serieId}</span>\r\n                </div>\r\n                <div>\r\n                    <span>{formatDate(point.data.xFormatted, point.data.lang)}</span>\r\n                    <span className=\"plot-tooltip-bold\">{` ${point.data.yFormatted}`}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    subregion_total_stream: {\r\n        type: 'stream',\r\n        yAxisFormat: absIntegerFormat,\r\n        xAxisFormat: streamTimeFormat,\r\n        log: false,\r\n        legends: [ regionLegends ]\r\n    },\r\n    subregion_new_stream: {\r\n        type: 'stream',\r\n        yAxisFormat: absIntegerFormat,\r\n        xAxisFormat: streamTimeFormat,\r\n        log: false,\r\n        legends: [ regionLegends ]\r\n    },\r\n    subregion_active_stream: {\r\n        type: 'stream',\r\n        yAxisFormat: absIntegerFormat,\r\n        xAxisFormat: streamTimeFormat,\r\n        log: false,\r\n        legends: [ regionLegends ]\r\n    },\r\n    subregion_fatality: {\r\n        type: 'line',\r\n        subregions: true,\r\n        log: false,\r\n        xLog: true,\r\n        margin: { left: 60 },\r\n        xFormat: ',d',\r\n        yFormat: '.2%',\r\n        xScale: {\r\n            type: 'log',\r\n            min: 1,\r\n            max: 10 ** 9\r\n        },\r\n        yScale: {\r\n            type: 'linear',\r\n            min: 0,\r\n            max: 0.4\r\n        },\r\n        xAxisFormat: integerFormat,\r\n        yAxisFormat: '.1%',\r\n        legends: [],\r\n        hideMarkers: true,\r\n        pointSize: 10,\r\n        pointBorderWidth: 2,\r\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\r\n        yTickValues: [ 0, 0.1, 0.2, 0.3, 0.4 ],\r\n        xTickRotation: 0,\r\n        xLegend: i18n.CONFIRMED,\r\n        yLegend: i18n.FATALITY_RATE,\r\n        yLegendOffset: -50,\r\n        enablePointLabel: true,\r\n        enableSlices: false,\r\n        pointLabelYOffset: -10,\r\n        pointLabel: (x) => x.name,\r\n        tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.CONFIRMED)\r\n    },\r\n    subregion_fatality2: {\r\n        type: 'line',\r\n        subregions: true,\r\n        log: false,\r\n        xLog: true,\r\n        xScale: {\r\n            type: 'log',\r\n            min: 1,\r\n            max: 10 ** 9\r\n        },\r\n        yScale: {\r\n            type: 'log',\r\n            min: 1,\r\n            max: 10 ** 8\r\n        },\r\n        margin: { left: 60 },\r\n        xFormat: ',d',\r\n        yFormat: ',d',\r\n        xAxisFormat: integerFormat,\r\n        yAxisFormat: integerFormat,\r\n        legends: [],\r\n        hideMarkers: true,\r\n        pointSize: 10,\r\n        pointBorderWidth: 2,\r\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\r\n        yTickValues: [ ...Array(9).keys() ].map((x) => 10 ** x),\r\n        xTickRotation: 0,\r\n        xLegend: i18n.CONFIRMED,\r\n        yLegend: i18n.DEATHS,\r\n        yLegendOffset: -50,\r\n        enablePointLabel: true,\r\n        enableSlices: false,\r\n        pointLabelYOffset: -10,\r\n        pointLabel: (x) =>\r\n            x.name === '中东呼吸综合征'\r\n                ? `${x.name}${'　'.repeat(8)}`\r\n                : x.name === 'MERS' ? `${x.name}${'　'.repeat(3)}` : x.name,\r\n        tooltip: fatalityTooltip(i18n.DEATHS, i18n.CONFIRMED)\r\n    },\r\n    subregion_fatality_only: {\r\n        type: 'line',\r\n        subregions: true,\r\n        log: false,\r\n        xLog: true,\r\n        margin: { left: 60 },\r\n        xFormat: ',d',\r\n        yFormat: '.2%',\r\n        xAxisFormat: integerFormat,\r\n        yAxisFormat: '.1%',\r\n        legends: [],\r\n        hideMarkers: true,\r\n        pointSize: 10,\r\n        pointBorderWidth: 2,\r\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\r\n        xTickRotation: 0,\r\n        xLegend: i18n.CONFIRMED,\r\n        yLegend: i18n.FATALITY_RATE,\r\n        yLegendOffset: -50,\r\n        enablePointLabel: false,\r\n        enableSlices: false,\r\n        tooltip: fatalityTooltip(i18n.FATALITY_RATE, i18n.CONFIRMED)\r\n    },\r\n    subregion_fatality2_only: {\r\n        type: 'line',\r\n        subregions: true,\r\n        log: false,\r\n        xLog: true,\r\n        yScale: {\r\n            type: 'log',\r\n            min: 'auto',\r\n            max: 'auto'\r\n        },\r\n        margin: { left: 60 },\r\n        xFormat: ',d',\r\n        yFormat: ',d',\r\n        xAxisFormat: integerFormat,\r\n        yAxisFormat: integerFormat,\r\n        legends: [],\r\n        hideMarkers: true,\r\n        pointSize: 10,\r\n        pointBorderWidth: 2,\r\n        xTickValues: [ ...Array(10).keys() ].map((x) => 10 ** x),\r\n        yTickValues: [ ...Array(9).keys() ].map((x) => 10 ** x),\r\n        xTickRotation: 0,\r\n        xLegend: i18n.CONFIRMED,\r\n        yLegend: i18n.DEATHS,\r\n        yLegendOffset: -50,\r\n        enablePointLabel: false,\r\n        enableSlices: false,\r\n        tooltip: fatalityTooltip(i18n.DEATHS, i18n.CONFIRMED)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}