{"ast":null,"code":"import _objectSpread from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{AiOutlineFullscreen,AiOutlineFullscreenExit}from'react-icons/ai';import{isMobile,isIPad13}from'react-device-detect';import PlotSelector from'./PlotSelector';import PlotNavBar from'./PlotNavBar';import LinePlot from'./LinePlot';import StreamPlot from'./StreamPlot';import BumpPlot from'./BumpPlot';import{generatePlotData}from'../utils/plot_data';import{getDataFromRegion}from'../utils/utils';import{plotTypes,plotSpecificTypes,getSpecificPlotType}from'../utils/plot_types';import*as str from'../utils/strings';import i18n from'../data/i18n.yml';var plotTheme=function plotTheme(darkMode,fullMode){return{fontFamily:'Saira, sans-serif',fontSize:fullMode?14:11,textColor:darkMode?'var(--lighter-grey)':'black',grid:{line:{stroke:darkMode?'var(--darkest-grey)':'var(--lighter-grey)'}},tooltip:{container:{background:darkMode?'var(--darkest-grey)':'white',color:darkMode?'var(--lighter-grey)':'black'}}};};var Plot=/*#__PURE__*/function(_Component){_inherits(Plot,_Component);var _super=_createSuper(Plot);function Plot(){var _this;_classCallCheck(this,Plot);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={height:290,plotDetails:{stats:'cumulative',fatalityLine:'rate',stream:'silhouette',diseaseComparison:'show',recoveryRate:'show',movingAverage:'1d'},plotSpecificType:'total'};_this.updateHight=function(){var vh=Math.max(document.documentElement.clientHeight,window.innerHeight||0);var vw=Math.max(document.documentElement.clientWidth,window.innerWidth||0);_this.setState({height:vh<850&&vw>=992?240:290});};_this.onSelect=function(s,v){var state={};state.plotDetails=_this.state.plotDetails;state.plotDetails[s]=v;_this.setState(state);_this.setSpecificPlotType(_this.props.plotType,state.plotDetails);};_this.setSpecificPlotType=function(plotType,plotDetails){var specificType=getSpecificPlotType(plotType,plotDetails);_this.setState({plotSpecificType:specificType});};return _this;}_createClass(Plot,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateHight();window.addEventListener('resize',this.updateHight);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.updateHight);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this$props=this.props,data=_this$props.data,currentRegion=_this$props.currentRegion;var currentRegionIsGlobal=currentRegion.length===1&&currentRegion[0]===str.GLOBAL_ZH;var hasSubregions=Object.keys(getDataFromRegion(data,currentRegion)).length>4||currentRegionIsGlobal;if(currentRegionIsGlobal&&this.props.plotType==='plot_one_vs_rest'){this.props.handlePlotTypeChange('plot_basic');this.setSpecificPlotType('plot_basic',this.state.plotDetails);}if(!hasSubregions&&plotTypes[this.props.plotType].subregions){this.props.handlePlotTypeChange('plot_basic');this.setSpecificPlotType('plot_basic',this.state.plotDetails);}}},{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,plotType=_this$props2.plotType,data=_this$props2.data,lang=_this$props2.lang,darkMode=_this$props2.darkMode,fullPlot=_this$props2.fullPlot,fullPlotToggle=_this$props2.fullPlotToggle,fullDimensions=_this$props2.fullDimensions;if(data==null)return/*#__PURE__*/React.createElement(\"div\",null);var plotParameters=plotSpecificTypes[this.state.plotSpecificType];var plotDataAll=generatePlotData(_objectSpread({},this.props,{plotSpecificType:this.state.plotSpecificType,plotDetails:this.state.plotDetails}));var plotData=plotDataAll.plotData;var isDataEmpty=!['plot_subregion_active_stream','plot_subregion_stream'].includes(plotType)?plotData.map(function(d){return d.data.length;}).reduce(function(s,x){return s+x;},0)===0:plotData.map(function(d){return Object.keys(d).length;}).reduce(function(s,x){return s+x;},0)===0;var tickValues=isDataEmpty?0:plotDataAll.tickValues!=null?plotDataAll.tickValues:5;var FullScreenIcon=fullPlot?AiOutlineFullscreenExit:AiOutlineFullscreen;var plotProps=_objectSpread({},this.props,{plotParameters:plotParameters,plotDataAll:plotDataAll,tickValues:tickValues,plotTheme:plotTheme(darkMode,fullPlot)});return/*#__PURE__*/React.createElement(\"div\",{className:\"plot-wrap\",style:{height:!fullPlot?'auto':fullDimensions.height-100,width:!fullPlot?'100%':fullDimensions.width+100}},/*#__PURE__*/React.createElement(PlotSelector,Object.assign({},this.props,this.state,{currentPlotType:plotType,onPlotTypeChange:function onPlotTypeChange(plotType){_this2.setSpecificPlotType(plotType,_this2.state.plotDetails);_this2.props.handlePlotTypeChange(plotType);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"plot-with-nav-bar\"},/*#__PURE__*/React.createElement(PlotNavBar,Object.assign({},this.props,this.state,{onSelect:this.onSelect})),/*#__PURE__*/React.createElement(\"div\",{style:{height:!fullPlot?this.state.height:fullDimensions.height-125,width:!fullPlot?'100%':fullDimensions.width-70}},isDataEmpty?/*#__PURE__*/React.createElement(\"div\",{className:\"plot-no-data\"},/*#__PURE__*/React.createElement(\"span\",null,i18n.NO_DATA[lang])):/*#__PURE__*/React.createElement(\"div\",null),!isDataEmpty&&/*#__PURE__*/React.createElement(LinePlot,plotProps),!isDataEmpty&&/*#__PURE__*/React.createElement(BumpPlot,plotProps),!isDataEmpty&&/*#__PURE__*/React.createElement(StreamPlot,Object.assign({offsetType:this.state.plotDetails.stream},plotProps)),/*#__PURE__*/React.createElement(\"div\",{className:\"plot-full-button\",\"data-tip\":!fullPlot&&!isMobile&&!isIPad13?i18n.PLOT_SETTINGS[lang]:''},/*#__PURE__*/React.createElement(FullScreenIcon,{size:fullPlot?30:20,onClick:fullPlotToggle})))));}}]);return Plot;}(Component);export{Plot as default};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/Plot.js"],"names":["React","Component","AiOutlineFullscreen","AiOutlineFullscreenExit","isMobile","isIPad13","PlotSelector","PlotNavBar","LinePlot","StreamPlot","BumpPlot","generatePlotData","getDataFromRegion","plotTypes","plotSpecificTypes","getSpecificPlotType","str","i18n","plotTheme","darkMode","fullMode","fontFamily","fontSize","textColor","grid","line","stroke","tooltip","container","background","color","Plot","state","height","plotDetails","stats","fatalityLine","stream","diseaseComparison","recoveryRate","movingAverage","plotSpecificType","updateHight","vh","Math","max","document","documentElement","clientHeight","window","innerHeight","vw","clientWidth","innerWidth","setState","onSelect","s","v","setSpecificPlotType","props","plotType","specificType","addEventListener","removeEventListener","prevProps","prevState","data","currentRegion","currentRegionIsGlobal","length","GLOBAL_ZH","hasSubregions","Object","keys","handlePlotTypeChange","subregions","lang","fullPlot","fullPlotToggle","fullDimensions","plotParameters","plotDataAll","plotData","isDataEmpty","includes","map","d","reduce","x","tickValues","FullScreenIcon","plotProps","width","NO_DATA","PLOT_SETTINGS"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { AiOutlineFullscreen, AiOutlineFullscreenExit } from 'react-icons/ai'\r\nimport { isMobile, isIPad13 } from 'react-device-detect'\r\nimport PlotSelector from './PlotSelector'\r\nimport PlotNavBar from './PlotNavBar'\r\nimport LinePlot from './LinePlot'\r\nimport StreamPlot from './StreamPlot'\r\nimport BumpPlot from './BumpPlot'\r\nimport { generatePlotData } from '../utils/plot_data'\r\nimport { getDataFromRegion } from '../utils/utils'\r\nimport { plotTypes, plotSpecificTypes, getSpecificPlotType } from '../utils/plot_types'\r\nimport * as str from '../utils/strings'\r\nimport i18n from '../data/i18n.yml'\r\n\r\nconst plotTheme = (darkMode, fullMode) => {\r\n    return {\r\n        fontFamily: 'Saira, sans-serif',\r\n        fontSize: fullMode ? 14 : 11,\r\n        textColor: darkMode ? 'var(--lighter-grey)' : 'black',\r\n        grid: {\r\n            line: {\r\n                stroke: darkMode ? 'var(--darkest-grey)' : 'var(--lighter-grey)'\r\n            }\r\n        },\r\n        tooltip: {\r\n            container: {\r\n                background: darkMode ? 'var(--darkest-grey)' : 'white',\r\n                color: darkMode ? 'var(--lighter-grey)' : 'black'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default class Plot extends Component {\r\n    state = {\r\n        height: 290,\r\n        plotDetails: {\r\n            stats: 'cumulative',\r\n            fatalityLine: 'rate',\r\n            stream: 'silhouette',\r\n            diseaseComparison: 'show',\r\n            recoveryRate: 'show',\r\n            movingAverage: '1d'\r\n        },\r\n        plotSpecificType: 'total'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateHight()\r\n        window.addEventListener('resize', this.updateHight)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateHight)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { data, currentRegion } = this.props\r\n        const currentRegionIsGlobal = currentRegion.length === 1 && currentRegion[0] === str.GLOBAL_ZH\r\n        const hasSubregions = Object.keys(getDataFromRegion(data, currentRegion)).length > 4 || currentRegionIsGlobal\r\n\r\n        if (currentRegionIsGlobal && this.props.plotType === 'plot_one_vs_rest') {\r\n            this.props.handlePlotTypeChange('plot_basic')\r\n            this.setSpecificPlotType('plot_basic', this.state.plotDetails)\r\n        }\r\n\r\n        if (!hasSubregions && plotTypes[this.props.plotType].subregions) {\r\n            this.props.handlePlotTypeChange('plot_basic')\r\n            this.setSpecificPlotType('plot_basic', this.state.plotDetails)\r\n        }\r\n    }\r\n\r\n    updateHight = () => {\r\n        const vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\r\n        const vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\r\n\r\n        this.setState({\r\n            height: vh < 850 && vw >= 992 ? 240 : 290\r\n        })\r\n    }\r\n\r\n    onSelect = (s, v) => {\r\n        let state = {}\r\n        state.plotDetails = this.state.plotDetails\r\n        state.plotDetails[s] = v\r\n\r\n        this.setState(state)\r\n        this.setSpecificPlotType(this.props.plotType, state.plotDetails)\r\n    }\r\n\r\n    setSpecificPlotType = (plotType, plotDetails) => {\r\n        const specificType = getSpecificPlotType(plotType, plotDetails)\r\n\r\n        this.setState({ plotSpecificType: specificType })\r\n    }\r\n\r\n    render() {\r\n        const { plotType, data, lang, darkMode, fullPlot, fullPlotToggle, fullDimensions } = this.props\r\n\r\n        if (data == null) return <div />\r\n\r\n        const plotParameters = plotSpecificTypes[this.state.plotSpecificType]\r\n        const plotDataAll = generatePlotData({\r\n            ...this.props,\r\n            plotSpecificType: this.state.plotSpecificType,\r\n            plotDetails: this.state.plotDetails\r\n        })\r\n        const plotData = plotDataAll.plotData\r\n\r\n        const isDataEmpty = ![ 'plot_subregion_active_stream', 'plot_subregion_stream' ].includes(plotType)\r\n            ? plotData.map((d) => d.data.length).reduce((s, x) => s + x, 0) === 0\r\n            : plotData.map((d) => Object.keys(d).length).reduce((s, x) => s + x, 0) === 0\r\n\r\n        const tickValues = isDataEmpty ? 0 : plotDataAll.tickValues != null ? plotDataAll.tickValues : 5\r\n\r\n        const FullScreenIcon = fullPlot ? AiOutlineFullscreenExit : AiOutlineFullscreen\r\n\r\n        const plotProps = {\r\n            ...this.props,\r\n            plotParameters,\r\n            plotDataAll,\r\n            tickValues,\r\n            plotTheme: plotTheme(darkMode, fullPlot)\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className=\"plot-wrap\"\r\n                style={{\r\n                    height: !fullPlot ? 'auto' : fullDimensions.height - 100,\r\n                    width: !fullPlot ? '100%' : fullDimensions.width + 100\r\n                }}\r\n            >\r\n                <PlotSelector\r\n                    {...this.props}\r\n                    {...this.state}\r\n                    currentPlotType={plotType}\r\n                    onPlotTypeChange={(plotType) => {\r\n                        this.setSpecificPlotType(plotType, this.state.plotDetails)\r\n                        this.props.handlePlotTypeChange(plotType)\r\n                    }}\r\n                />\r\n                <div className=\"plot-with-nav-bar\">\r\n                    <PlotNavBar {...this.props} {...this.state} onSelect={this.onSelect} />\r\n                    <div\r\n                        style={{\r\n                            height: !fullPlot ? this.state.height : fullDimensions.height - 125,\r\n                            width: !fullPlot ? '100%' : fullDimensions.width - 70\r\n                        }}\r\n                    >\r\n                        {isDataEmpty ? (\r\n                            <div className=\"plot-no-data\">\r\n                                <span>{i18n.NO_DATA[lang]}</span>\r\n                            </div>\r\n                        ) : (\r\n                            <div />\r\n                        )}\r\n                        {!isDataEmpty && <LinePlot {...plotProps} />}\r\n                        {!isDataEmpty && <BumpPlot {...plotProps} />}\r\n                        {!isDataEmpty && <StreamPlot offsetType={this.state.plotDetails.stream} {...plotProps} />}\r\n                        <div\r\n                            className=\"plot-full-button\"\r\n                            data-tip={!fullPlot && !isMobile && !isIPad13 ? i18n.PLOT_SETTINGS[lang] : ''}\r\n                        >\r\n                            <FullScreenIcon size={fullPlot ? 30 : 20} onClick={fullPlotToggle} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}