{"ast":null,"code":"export function bound01(n, max) {\n  if (isOnePointZero(n)) {\n    n = '100%';\n  }\n\n  var processPercent = isPercentage(n);\n  n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n\n  if (processPercent) {\n    n = parseInt(String(n * max), 10) / 100;\n  }\n\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  }\n\n  if (max === 360) {\n    n = (n < 0 ? n % max + max : n % max) / parseFloat(String(max));\n  } else {\n    n = n % max / parseFloat(String(max));\n  }\n\n  return n;\n}\nexport function clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\nexport function isOnePointZero(n) {\n  return typeof n === 'string' && n.includes('.') && parseFloat(n) === 1;\n}\nexport function isPercentage(n) {\n  return typeof n === 'string' && n.includes('%');\n}\nexport function boundAlpha(a) {\n  a = parseFloat(a);\n\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n\n  return a;\n}\nexport function convertToPercentage(n) {\n  if (n <= 1) {\n    return Number(n) * 100 + \"%\";\n  }\n\n  return n;\n}\nexport function pad2(c) {\n  return c.length === 1 ? '0' + c : String(c);\n}","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/node_modules/@ctrl/tinycolor/dist/es/util.js"],"names":["bound01","n","max","isOnePointZero","processPercent","isPercentage","Math","min","parseFloat","parseInt","String","abs","clamp01","val","includes","boundAlpha","a","isNaN","convertToPercentage","Number","pad2","c","length"],"mappings":"AAAA,OAAO,SAASA,OAAT,CAAiBC,CAAjB,EAAoBC,GAApB,EAAyB;AAC5B,MAAIC,cAAc,CAACF,CAAD,CAAlB,EAAuB;AACnBA,IAAAA,CAAC,GAAG,MAAJ;AACH;;AACD,MAAIG,cAAc,GAAGC,YAAY,CAACJ,CAAD,CAAjC;AACAA,EAAAA,CAAC,GAAGC,GAAG,KAAK,GAAR,GAAcD,CAAd,GAAkBK,IAAI,CAACC,GAAL,CAASL,GAAT,EAAcI,IAAI,CAACJ,GAAL,CAAS,CAAT,EAAYM,UAAU,CAACP,CAAD,CAAtB,CAAd,CAAtB;;AACA,MAAIG,cAAJ,EAAoB;AAChBH,IAAAA,CAAC,GAAGQ,QAAQ,CAACC,MAAM,CAACT,CAAC,GAAGC,GAAL,CAAP,EAAkB,EAAlB,CAAR,GAAgC,GAApC;AACH;;AACD,MAAII,IAAI,CAACK,GAAL,CAASV,CAAC,GAAGC,GAAb,IAAoB,QAAxB,EAAkC;AAC9B,WAAO,CAAP;AACH;;AACD,MAAIA,GAAG,KAAK,GAAZ,EAAiB;AACbD,IAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,CAAJ,GAASA,CAAC,GAAGC,GAAL,GAAYA,GAApB,GAA0BD,CAAC,GAAGC,GAA/B,IAAsCM,UAAU,CAACE,MAAM,CAACR,GAAD,CAAP,CAApD;AACH,GAFD,MAGK;AACDD,IAAAA,CAAC,GAAIA,CAAC,GAAGC,GAAL,GAAYM,UAAU,CAACE,MAAM,CAACR,GAAD,CAAP,CAA1B;AACH;;AACD,SAAOD,CAAP;AACH;AACD,OAAO,SAASW,OAAT,CAAiBC,GAAjB,EAAsB;AACzB,SAAOP,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACJ,GAAL,CAAS,CAAT,EAAYW,GAAZ,CAAZ,CAAP;AACH;AACD,OAAO,SAASV,cAAT,CAAwBF,CAAxB,EAA2B;AAC9B,SAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAACa,QAAF,CAAW,GAAX,CAAzB,IAA4CN,UAAU,CAACP,CAAD,CAAV,KAAkB,CAArE;AACH;AACD,OAAO,SAASI,YAAT,CAAsBJ,CAAtB,EAAyB;AAC5B,SAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAACa,QAAF,CAAW,GAAX,CAAhC;AACH;AACD,OAAO,SAASC,UAAT,CAAoBC,CAApB,EAAuB;AAC1BA,EAAAA,CAAC,GAAGR,UAAU,CAACQ,CAAD,CAAd;;AACA,MAAIC,KAAK,CAACD,CAAD,CAAL,IAAYA,CAAC,GAAG,CAAhB,IAAqBA,CAAC,GAAG,CAA7B,EAAgC;AAC5BA,IAAAA,CAAC,GAAG,CAAJ;AACH;;AACD,SAAOA,CAAP;AACH;AACD,OAAO,SAASE,mBAAT,CAA6BjB,CAA7B,EAAgC;AACnC,MAAIA,CAAC,IAAI,CAAT,EAAY;AACR,WAAOkB,MAAM,CAAClB,CAAD,CAAN,GAAY,GAAZ,GAAkB,GAAzB;AACH;;AACD,SAAOA,CAAP;AACH;AACD,OAAO,SAASmB,IAAT,CAAcC,CAAd,EAAiB;AACpB,SAAOA,CAAC,CAACC,MAAF,KAAa,CAAb,GAAiB,MAAMD,CAAvB,GAA2BX,MAAM,CAACW,CAAD,CAAxC;AACH","sourcesContent":["export function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var processPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    if (processPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    if (max === 360) {\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.includes('.') && parseFloat(n) === 1;\n}\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.includes('%');\n}\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return Number(n) * 100 + \"%\";\n    }\n    return n;\n}\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n"]},"metadata":{},"sourceType":"module"}