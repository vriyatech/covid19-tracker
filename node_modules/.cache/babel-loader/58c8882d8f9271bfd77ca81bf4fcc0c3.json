{"ast":null,"code":"import _objectSpread from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component,Fragment}from'react';import{Container,Row,Col}from'reactstrap';import ReactTooltip from'react-tooltip';import{AiOutlineFullscreen,AiOutlineFullscreenExit}from'react-icons/ai';import Helmet from'react-helmet';import Measure from'react-measure';import format from'date-fns/format';import'./App.css';import Map from'./Map';import MapNavBar from'./MapNavBar';import DateSlider from'./DateSlider';import AnimationController from'./AnimationController';import MainCounts from'./MainCounts';import Plot from'./Plot';import Tree from'./Tree';import NavBar from'./NavBar';import Loading from'./Loading';import Region from'./Region';import TransmissionNetwork from'./TransmissionNetwork';import{ReactComponent as Icon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../covid19.svg\";import i18n from'../data/i18n.yml';import us_map from'../data/us_map.yml';import*as str from'../utils/strings';import{updateDarkMode}from'../utils/utils';import{mapText}from'../utils/map_text';var defaultState={currentMap:'WORLD',metric:'confirmedCount',currentRegion:[str.GLOBAL_ZH],playing:false,scale:'linear',mapZoom:1,fullMap:false,fullPlot:false};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state=_objectSpread({startDate:'2020-01-24',endDate:'2020-02-14',date:'2020-02-14',tempDate:'2020-02-14',plotDates:['2020-01-24','2020-02-14'],data:null,dataLoaded:false,lang:'en',darkMode:false,mapDimensions:{width:-1,height:-1},fullDimensions:{width:-1,height:-1},plotType:'plot_basic'},defaultState);_this.fetchData=function(){return fetch('https://raw.githubusercontent.com/stevenliuyi/covid19/master/public/data/all_minified.json').then(function(res){return res.json();}).then(function(res){var latest=Object.keys(res[str.GLOBAL_ZH].confirmedCount).pop();_this.setState({data:res,dataLoaded:true,date:latest,tempDate:latest,endDate:latest,plotDates:[_this.state.plotDates[0],latest]});_this.tooltipRebuild();});};_this.updateFullDimensions=function(){var width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;var height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;if(height<750||width<992){if(_this.state.fullMap)_this.setState({fullMap:false});if(_this.state.fullPlot)_this.setState({fullPlot:false});}_this.setState({fullDimensions:{height:Math.min(height-250,(width-200)*3/4),width:Math.min((height-250)*4/3,width-200)}});};_this.reset=function(){return _this.setState(_objectSpread({},defaultState,{date:_this.state.endDate,tempDate:_this.state.endDate,plotDates:[_this.state.startDate,_this.state.endDate]}));};_this.mapToggle=function(newMap){return _this.setState({currentMap:newMap,// do not reset map zoom when switching between two China maps\nmapZoom:newMap===str.WORLD_MAP||_this.state.currentMap===str.WORLD_MAP?1:_this.state.mapZoom});};_this.metricToggle=function(newMetric){return _this.setState({metric:newMetric});};_this.regionToggle=function(newRegion){var mapChange=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var currentMap=_this.state.currentMap;_this.setState({currentRegion:newRegion});if(!mapChange)return;if(currentMap===str.TRANSMISSION)return;if(newRegion[0]===str.CHINA_ZH){if(newRegion.length>=4){_this.mapToggle(str.CHINA_MAP2);}else if(currentMap!==str.CHINA_MAP2){_this.mapToggle(str.CHINA_MAP1);}}else if(newRegion[0]===str.US_ZH){if(newRegion.length>=2&&newRegion[1]in us_map){_this.mapToggle(str.US_MAP2);}else{_this.mapToggle(str.US_MAP);}}else if(newRegion[0]===str.INTL_CONVEYANCE_ZH){_this.mapToggle(str.JAPAN_MAP);}else{var map=Object.keys(mapText).find(function(x){return mapText[x].regionName===newRegion[0];});map=map!=null?map:str.WORLD_MAP;if(map===str.WORLD_MAP&&currentMap===str.EUROPE_MAP)map=str.EUROPE_MAP;_this.mapToggle(map);}};_this.playingToggle=function(){return _this.setState({playing:!_this.state.playing});};_this.scaleToggle=function(newScale){return _this.setState({scale:newScale});};_this.languageToggle=function(){return _this.setState({lang:_this.state.lang==='en'?'en':'en'});};_this.fullMapToggle=function(){_this.setState({fullMap:!_this.state.fullMap});};_this.fullPlotToggle=function(){ReactTooltip.hide();_this.setState({fullPlot:!_this.state.fullPlot});};_this.darkModeToggle=function(){updateDarkMode(!_this.state.darkMode);_this.setState({darkMode:!_this.state.darkMode});};_this.handleMapZoomChange=function(newZoom){return _this.setState({mapZoom:newZoom});};_this.handleDateChange=function(newDate){return _this.setState({date:newDate,tempDate:newDate});};_this.handleTempDateChange=function(newDates){var newDateStrings=newDates.map(function(x){return format(x,'yyyy-MM-dd');});if(!_this.state.fullPlot){_this.setState({tempDate:newDateStrings[0]});}else{_this.setState({plotDates:newDateStrings});}};_this.handlePlotTypeChange=function(newType){return _this.setState({plotType:newType});};_this.tooltipRebuild=function(){return ReactTooltip.rebuild();};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){updateDarkMode(this.state.darkMode);this.fetchData();this.updateFullDimensions();window.addEventListener('resize',this.updateFullDimensions);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.updateFullDimensions);}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,lang=_this$state.lang,dataLoaded=_this$state.dataLoaded,currentMap=_this$state.currentMap,fullMap=_this$state.fullMap,fullPlot=_this$state.fullPlot,darkMode=_this$state.darkMode;var FullScreenIcon=fullMap?AiOutlineFullscreenExit:AiOutlineFullscreen;return/*#__PURE__*/React.createElement(\"div\",{className:\"App \".concat(darkMode?'dark':'')},/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,i18n.COVID19[lang])),!dataLoaded?/*#__PURE__*/React.createElement(Loading,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Container,{className:\"app-container \".concat(fullMap?'map-full':fullPlot?'plot-full':'')},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:!fullMap?7:12},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(\"span\",{className:\"header-icon\",style:{opacity:dataLoaded?1:0}},/*#__PURE__*/React.createElement(Icon,null)),/*#__PURE__*/React.createElement(\"span\",{className:\"header-title\",style:{letterSpacing:lang==='zh'?'1px':'normal'}},i18n.COVID19[lang])),/*#__PURE__*/React.createElement(NavBar,Object.assign({},this.state,{scaleToggle:this.scaleToggle// languageToggle={this.languageToggle}\n,darkModeToggle:this.darkModeToggle,reset:this.reset})),!fullPlot&&/*#__PURE__*/React.createElement(Measure,{bounds:true,onResize:function onResize(contentRect){_this2.setState({mapDimensions:contentRect.bounds});}},function(_ref){var measureRef=_ref.measureRef;return/*#__PURE__*/React.createElement(\"div\",{ref:measureRef,className:\"map\",style:{height:!fullMap?_this2.state.mapDimensions.width*3/4:_this2.state.fullDimensions.height,width:!fullMap?'100%':_this2.state.fullDimensions.width}},currentMap===str.TRANSMISSION&&/*#__PURE__*/React.createElement(TransmissionNetwork,Object.assign({},_this2.state,{regionToggle:_this2.regionToggle,tooltipRebuild:_this2.tooltipRebuild})),currentMap!==str.TRANSMISSION&&/*#__PURE__*/React.createElement(Map,Object.assign({},_this2.state,{handleMapZoomChange:_this2.handleMapZoomChange,mapToggle:_this2.mapToggle,regionToggle:_this2.regionToggle,tooltipRebuild:_this2.tooltipRebuild})),/*#__PURE__*/React.createElement(\"div\",{className:\"map-full-button\"},/*#__PURE__*/React.createElement(FullScreenIcon,{size:fullMap?30:20,onClick:_this2.fullMapToggle})));}),/*#__PURE__*/React.createElement(MapNavBar,Object.assign({},this.state,{mapToggle:this.mapToggle,metricToggle:this.metricToggle,regionToggle:this.regionToggle})),/*#__PURE__*/React.createElement(DateSlider,Object.assign({},this.state,{handleDateChange:this.handleDateChange,handleTempDateChange:this.handleTempDateChange})),/*#__PURE__*/React.createElement(AnimationController,Object.assign({},this.state,{handleDateChange:this.handleDateChange,playingToggle:this.playingToggle})),/*#__PURE__*/React.createElement(\"div\",{className:\"footer-white\"})),!fullMap&&/*#__PURE__*/React.createElement(Col,{lg:!fullPlot?5:12,className:\"col-right\"},/*#__PURE__*/React.createElement(Row,{style:{display:'flex',flexDirection:'column',padding:10}},/*#__PURE__*/React.createElement(Region,Object.assign({},this.state,{regionToggle:this.regionToggle,ReactTooltip:ReactTooltip})),/*#__PURE__*/React.createElement(MainCounts,this.state),/*#__PURE__*/React.createElement(Plot,Object.assign({},this.state,{regionToggle:this.regionToggle,fullPlotToggle:this.fullPlotToggle,scaleToggle:this.scaleToggle,handlePlotTypeChange:this.handlePlotTypeChange})),/*#__PURE__*/React.createElement(Tree,Object.assign({},this.state,{regionToggle:this.regionToggle})),/*#__PURE__*/React.createElement(\"div\",{className:\"footer-placeholder\"})))))),/*#__PURE__*/React.createElement(ReactTooltip,{className:\"plot-tooltip\",type:darkMode?'dark':'light',html:true}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/App_corona.js"],"names":["React","Component","Fragment","Container","Row","Col","ReactTooltip","AiOutlineFullscreen","AiOutlineFullscreenExit","Helmet","Measure","format","Map","MapNavBar","DateSlider","AnimationController","MainCounts","Plot","Tree","NavBar","Loading","Region","TransmissionNetwork","i18n","us_map","str","updateDarkMode","mapText","defaultState","currentMap","metric","currentRegion","GLOBAL_ZH","playing","scale","mapZoom","fullMap","fullPlot","App","state","startDate","endDate","date","tempDate","plotDates","data","dataLoaded","lang","darkMode","mapDimensions","width","height","fullDimensions","plotType","fetchData","fetch","then","res","json","latest","Object","keys","confirmedCount","pop","setState","tooltipRebuild","updateFullDimensions","window","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","Math","min","reset","mapToggle","newMap","WORLD_MAP","metricToggle","newMetric","regionToggle","newRegion","mapChange","TRANSMISSION","CHINA_ZH","length","CHINA_MAP2","CHINA_MAP1","US_ZH","US_MAP2","US_MAP","INTL_CONVEYANCE_ZH","JAPAN_MAP","map","find","x","regionName","EUROPE_MAP","playingToggle","scaleToggle","newScale","languageToggle","fullMapToggle","fullPlotToggle","hide","darkModeToggle","handleMapZoomChange","newZoom","handleDateChange","newDate","handleTempDateChange","newDates","newDateStrings","handlePlotTypeChange","newType","rebuild","addEventListener","removeEventListener","FullScreenIcon","COVID19","opacity","letterSpacing","contentRect","bounds","measureRef","display","flexDirection","padding"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { AiOutlineFullscreen, AiOutlineFullscreenExit } from 'react-icons/ai'\r\nimport Helmet from 'react-helmet'\r\nimport Measure from 'react-measure'\r\nimport format from 'date-fns/format'\r\nimport './App.css'\r\nimport Map from './Map'\r\nimport MapNavBar from './MapNavBar'\r\nimport DateSlider from './DateSlider'\r\nimport AnimationController from './AnimationController'\r\nimport MainCounts from './MainCounts'\r\nimport Plot from './Plot'\r\nimport Tree from './Tree'\r\nimport NavBar from './NavBar'\r\nimport Loading from './Loading'\r\nimport Region from './Region'\r\nimport TransmissionNetwork from './TransmissionNetwork'\r\nimport { ReactComponent as Icon } from '../covid19.svg'\r\nimport i18n from '../data/i18n.yml'\r\nimport us_map from '../data/us_map.yml'\r\nimport * as str from '../utils/strings'\r\nimport { updateDarkMode } from '../utils/utils'\r\nimport { mapText } from '../utils/map_text'\r\n\r\nconst defaultState = {\r\n    currentMap: 'WORLD',\r\n    metric: 'confirmedCount',\r\n    currentRegion: [ str.GLOBAL_ZH ],\r\n    playing: false,\r\n    scale: 'linear',\r\n    mapZoom: 1,\r\n    fullMap: false,\r\n    fullPlot: false\r\n}\r\n\r\nclass App extends Component {\r\n    state = {\r\n        startDate: '2020-01-24',\r\n        endDate: '2020-02-14',\r\n        date: '2020-02-14',\r\n        tempDate: '2020-02-14',\r\n        plotDates: [ '2020-01-24', '2020-02-14' ],\r\n        data: null,\r\n        dataLoaded: false,\r\n        lang: 'en',\r\n        darkMode: false,\r\n        mapDimensions: {\r\n            width: -1,\r\n            height: -1\r\n        },\r\n        fullDimensions: {\r\n            width: -1,\r\n            height: -1\r\n        },\r\n        plotType: 'plot_basic',\r\n        ...defaultState\r\n    }\r\n\r\n    fetchData = () =>\r\n        fetch('https://raw.githubusercontent.com/stevenliuyi/covid19/master/public/data/all_minified.json').then((res) => res.json()).then((res) => {\r\n            const latest = Object.keys(res[str.GLOBAL_ZH].confirmedCount).pop()\r\n            this.setState({\r\n                data: res,\r\n                dataLoaded: true,\r\n                date: latest,\r\n                tempDate: latest,\r\n                endDate: latest,\r\n                plotDates: [ this.state.plotDates[0], latest ]\r\n            })\r\n            this.tooltipRebuild()\r\n        })\r\n\r\n    componentDidMount() {\r\n        updateDarkMode(this.state.darkMode)\r\n        this.fetchData()\r\n        this.updateFullDimensions()\r\n        window.addEventListener('resize', this.updateFullDimensions)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateFullDimensions)\r\n    }\r\n\r\n    updateFullDimensions = () => {\r\n        const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n        const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n\r\n        if (height < 750 || width < 992) {\r\n            if (this.state.fullMap) this.setState({ fullMap: false })\r\n            if (this.state.fullPlot) this.setState({ fullPlot: false })\r\n        }\r\n\r\n        this.setState({\r\n            fullDimensions: {\r\n                height: Math.min(height - 250, (width - 200) * 3 / 4),\r\n                width: Math.min((height - 250) * 4 / 3, width - 200)\r\n            }\r\n        })\r\n    }\r\n\r\n    reset = () =>\r\n        this.setState({\r\n            ...defaultState,\r\n            date: this.state.endDate,\r\n            tempDate: this.state.endDate,\r\n            plotDates: [ this.state.startDate, this.state.endDate ]\r\n        })\r\n\r\n    mapToggle = (newMap) =>\r\n        this.setState({\r\n            currentMap: newMap,\r\n            // do not reset map zoom when switching between two China maps\r\n            mapZoom: newMap === str.WORLD_MAP || this.state.currentMap === str.WORLD_MAP ? 1 : this.state.mapZoom\r\n        })\r\n\r\n    metricToggle = (newMetric) => this.setState({ metric: newMetric })\r\n\r\n    regionToggle = (newRegion, mapChange = true) => {\r\n        const { currentMap } = this.state\r\n        this.setState({ currentRegion: newRegion })\r\n        if (!mapChange) return\r\n\r\n        if (currentMap === str.TRANSMISSION) return\r\n\r\n        if (newRegion[0] === str.CHINA_ZH) {\r\n            if (newRegion.length >= 4) {\r\n                this.mapToggle(str.CHINA_MAP2)\r\n            } else if (currentMap !== str.CHINA_MAP2) {\r\n                this.mapToggle(str.CHINA_MAP1)\r\n            }\r\n        } else if (newRegion[0] === str.US_ZH) {\r\n            if (newRegion.length >= 2 && newRegion[1] in us_map) {\r\n                this.mapToggle(str.US_MAP2)\r\n            } else {\r\n                this.mapToggle(str.US_MAP)\r\n            }\r\n        } else if (newRegion[0] === str.INTL_CONVEYANCE_ZH) {\r\n            this.mapToggle(str.JAPAN_MAP)\r\n        } else {\r\n            let map = Object.keys(mapText).find((x) => mapText[x].regionName === newRegion[0])\r\n            map = map != null ? map : str.WORLD_MAP\r\n            if (map === str.WORLD_MAP && currentMap === str.EUROPE_MAP) map = str.EUROPE_MAP\r\n            this.mapToggle(map)\r\n        }\r\n    }\r\n\r\n    playingToggle = () => this.setState({ playing: !this.state.playing })\r\n\r\n    scaleToggle = (newScale) => this.setState({ scale: newScale })\r\n\r\n    languageToggle = () => this.setState({ lang: this.state.lang === 'en' ? 'en' : 'en' })\r\n\r\n    fullMapToggle = () => {\r\n        this.setState({ fullMap: !this.state.fullMap })\r\n    }\r\n\r\n    fullPlotToggle = () => {\r\n        ReactTooltip.hide()\r\n        this.setState({ fullPlot: !this.state.fullPlot })\r\n    }\r\n\r\n    darkModeToggle = () => {\r\n        updateDarkMode(!this.state.darkMode)\r\n        this.setState({ darkMode: !this.state.darkMode })\r\n    }\r\n\r\n    handleMapZoomChange = (newZoom) => this.setState({ mapZoom: newZoom })\r\n\r\n    handleDateChange = (newDate) => this.setState({ date: newDate, tempDate: newDate })\r\n\r\n    handleTempDateChange = (newDates) => {\r\n        const newDateStrings = newDates.map((x) => format(x, 'yyyy-MM-dd'))\r\n        if (!this.state.fullPlot) {\r\n            this.setState({ tempDate: newDateStrings[0] })\r\n        } else {\r\n            this.setState({ plotDates: newDateStrings })\r\n        }\r\n    }\r\n\r\n    handlePlotTypeChange = (newType) => this.setState({ plotType: newType })\r\n\r\n    tooltipRebuild = () => ReactTooltip.rebuild()\r\n\r\n    render() {\r\n        const { lang, dataLoaded, currentMap, fullMap, fullPlot, darkMode } = this.state\r\n        const FullScreenIcon = fullMap ? AiOutlineFullscreenExit : AiOutlineFullscreen\r\n\r\n        return (\r\n            <div className={`App ${darkMode ? 'dark' : ''}`}>\r\n                <Helmet>\r\n                    <title>{i18n.COVID19[lang]}</title>\r\n                </Helmet>\r\n                {!dataLoaded ? (\r\n                    <Loading />\r\n                ) : (\r\n                    <Fragment>\r\n                        <Container className={`app-container ${fullMap ? 'map-full' : fullPlot ? 'plot-full' : ''}`}>\r\n                            <Row>\r\n                                <Col lg={!fullMap ? 7 : 12}>\r\n                                    <div className=\"header\">\r\n                                        <span className=\"header-icon\" style={{ opacity: dataLoaded ? 1 : 0 }}>\r\n                                            <Icon />\r\n                                        </span>\r\n                                        <span\r\n                                            className=\"header-title\"\r\n                                            style={{ letterSpacing: lang === 'zh' ? '1px' : 'normal' }}\r\n                                        >\r\n                                            {i18n.COVID19[lang]}\r\n                                        </span>\r\n                                    </div>\r\n                                    <NavBar\r\n                                        {...this.state}\r\n                                        scaleToggle={this.scaleToggle}\r\n                                        // languageToggle={this.languageToggle}\r\n                                        darkModeToggle={this.darkModeToggle}\r\n                                        reset={this.reset}\r\n                                    />\r\n                                    {!fullPlot && (\r\n                                        <Measure\r\n                                            bounds\r\n                                            onResize={(contentRect) => {\r\n                                                this.setState({ mapDimensions: contentRect.bounds })\r\n                                            }}\r\n                                        >\r\n                                            {({ measureRef }) => (\r\n                                                <div\r\n                                                    ref={measureRef}\r\n                                                    className=\"map\"\r\n                                                    style={{\r\n                                                        height: !fullMap\r\n                                                            ? this.state.mapDimensions.width * 3 / 4\r\n                                                            : this.state.fullDimensions.height,\r\n                                                        width: !fullMap ? '100%' : this.state.fullDimensions.width\r\n                                                    }}\r\n                                                >\r\n                                                    {currentMap === str.TRANSMISSION && (\r\n                                                        <TransmissionNetwork\r\n                                                            {...this.state}\r\n                                                            regionToggle={this.regionToggle}\r\n                                                            tooltipRebuild={this.tooltipRebuild}\r\n                                                        />\r\n                                                    )}\r\n                                                    {currentMap !== str.TRANSMISSION && (\r\n                                                        <Map\r\n                                                            {...this.state}\r\n                                                            handleMapZoomChange={this.handleMapZoomChange}\r\n                                                            mapToggle={this.mapToggle}\r\n                                                            regionToggle={this.regionToggle}\r\n                                                            tooltipRebuild={this.tooltipRebuild}\r\n                                                        />\r\n                                                    )}\r\n                                                    <div className=\"map-full-button\">\r\n                                                        <FullScreenIcon\r\n                                                            size={fullMap ? 30 : 20}\r\n                                                            onClick={this.fullMapToggle}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </Measure>\r\n                                    )}\r\n                                    <MapNavBar\r\n                                        {...this.state}\r\n                                        mapToggle={this.mapToggle}\r\n                                        metricToggle={this.metricToggle}\r\n                                        regionToggle={this.regionToggle}\r\n                                    />\r\n                                    <DateSlider\r\n                                        {...this.state}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        handleTempDateChange={this.handleTempDateChange}\r\n                                    />\r\n                                    <AnimationController\r\n                                        {...this.state}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        playingToggle={this.playingToggle}\r\n                                    />\r\n                                    <div className=\"footer-white\" />\r\n                                </Col>\r\n                                {!fullMap && (\r\n                                    <Col lg={!fullPlot ? 5 : 12} className=\"col-right\">\r\n                                        <Row style={{ display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                            <Region\r\n                                                {...this.state}\r\n                                                regionToggle={this.regionToggle}\r\n                                                ReactTooltip={ReactTooltip}\r\n                                            />\r\n                                            <MainCounts {...this.state} />\r\n                                            <Plot\r\n                                                {...this.state}\r\n                                                regionToggle={this.regionToggle}\r\n                                                fullPlotToggle={this.fullPlotToggle}\r\n                                                scaleToggle={this.scaleToggle}\r\n                                                handlePlotTypeChange={this.handlePlotTypeChange}\r\n                                            />\r\n                                            <Tree {...this.state} regionToggle={this.regionToggle} />\r\n                                            <div className=\"footer-placeholder\" />\r\n                                        </Row>\r\n                                    </Col>\r\n                                )}\r\n                            </Row>\r\n                        </Container>\r\n                        {/* <Footer {...this.state} /> */}\r\n                    </Fragment>\r\n                )}\r\n                <ReactTooltip className=\"plot-tooltip\" type={darkMode ? 'dark' : 'light'} html={true} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}