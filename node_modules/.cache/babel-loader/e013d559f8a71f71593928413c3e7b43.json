{"ast":null,"code":"import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nimport { PatternOrientation } from '../constants';\n\nfunction pathForOrientation(_ref) {\n  var height = _ref.height,\n      orientation = _ref.orientation;\n\n  switch (orientation) {\n    case PatternOrientation.vertical:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n\n    case PatternOrientation.horizontal:\n      return \"M 0,\" + height / 2 + \" l \" + height + \",0\";\n\n    case PatternOrientation.diagonal:\n      return \"M 0,\" + height + \" l \" + height + \",\" + -height + \" M \" + -height / 4 + \",\" + height / 4 + \" l \" + height / 2 + \",\" + -height / 2 + \"\\n             M \" + 3 / 4 * height + \",\" + 5 / 4 * height + \" l \" + height / 2 + \",\" + -height / 2;\n\n    default:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n  }\n}\n\nexport default function PatternLines(_ref2) {\n  var id = _ref2.id,\n      width = _ref2.width,\n      height = _ref2.height,\n      stroke = _ref2.stroke,\n      strokeWidth = _ref2.strokeWidth,\n      strokeDasharray = _ref2.strokeDasharray,\n      _ref2$strokeLinecap = _ref2.strokeLinecap,\n      strokeLinecap = _ref2$strokeLinecap === void 0 ? 'square' : _ref2$strokeLinecap,\n      _ref2$shapeRendering = _ref2.shapeRendering,\n      shapeRendering = _ref2$shapeRendering === void 0 ? 'auto' : _ref2$shapeRendering,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? ['vertical'] : _ref2$orientation,\n      background = _ref2.background,\n      className = _ref2.className;\n  var orientations = Array.isArray(orientation) ? orientation : [orientation];\n  return React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && React.createElement(\"rect\", {\n    className: cx('vx-pattern-line-background'),\n    width: width,\n    height: height,\n    fill: background\n  }), orientations.map(function (o, i) {\n    return React.createElement(\"path\", {\n      key: \"vx-\" + id + \"-line-\" + o + \"-\" + i,\n      className: cx('vx-pattern-line', className),\n      d: pathForOrientation({\n        orientation: o,\n        height: height\n      }),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeLinecap: strokeLinecap,\n      shapeRendering: shapeRendering\n    });\n  }));\n}\nPatternLines.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number]),\n  orientation: _pt.array\n};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/node_modules/@vx/pattern/esm/patterns/Lines.js"],"names":["_pt","React","cx","Pattern","PatternOrientation","pathForOrientation","_ref","height","orientation","vertical","horizontal","diagonal","PatternLines","_ref2","id","width","stroke","strokeWidth","strokeDasharray","_ref2$strokeLinecap","strokeLinecap","_ref2$shapeRendering","shapeRendering","_ref2$orientation","background","className","orientations","Array","isArray","createElement","fill","map","o","i","key","d","propTypes","string","isRequired","number","oneOfType","oneOf","array"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,kBAAT,QAAmC,cAAnC;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAAA,MACIC,WAAW,GAAGF,IAAI,CAACE,WADvB;;AAGA,UAAQA,WAAR;AACE,SAAKJ,kBAAkB,CAACK,QAAxB;AACE,aAAO,OAAOF,MAAM,GAAG,CAAhB,GAAoB,WAApB,GAAkCA,MAAzC;;AAEF,SAAKH,kBAAkB,CAACM,UAAxB;AACE,aAAO,SAASH,MAAM,GAAG,CAAlB,GAAsB,KAAtB,GAA8BA,MAA9B,GAAuC,IAA9C;;AAEF,SAAKH,kBAAkB,CAACO,QAAxB;AACE,aAAO,SAASJ,MAAT,GAAkB,KAAlB,GAA0BA,MAA1B,GAAmC,GAAnC,GAAyC,CAACA,MAA1C,GAAmD,KAAnD,GAA2D,CAACA,MAAD,GAAU,CAArE,GAAyE,GAAzE,GAA+EA,MAAM,GAAG,CAAxF,GAA4F,KAA5F,GAAoGA,MAAM,GAAG,CAA7G,GAAiH,GAAjH,GAAuH,CAACA,MAAD,GAAU,CAAjI,GAAqI,mBAArI,GAA2J,IAAI,CAAJ,GAAQA,MAAnK,GAA4K,GAA5K,GAAkL,IAAI,CAAJ,GAAQA,MAA1L,GAAmM,KAAnM,GAA2MA,MAAM,GAAG,CAApN,GAAwN,GAAxN,GAA8N,CAACA,MAAD,GAAU,CAA/O;;AAEF;AACE,aAAO,OAAOA,MAAM,GAAG,CAAhB,GAAoB,WAApB,GAAkCA,MAAzC;AAXJ;AAaD;;AAED,eAAe,SAASK,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,MAAIC,EAAE,GAAGD,KAAK,CAACC,EAAf;AAAA,MACIC,KAAK,GAAGF,KAAK,CAACE,KADlB;AAAA,MAEIR,MAAM,GAAGM,KAAK,CAACN,MAFnB;AAAA,MAGIS,MAAM,GAAGH,KAAK,CAACG,MAHnB;AAAA,MAIIC,WAAW,GAAGJ,KAAK,CAACI,WAJxB;AAAA,MAKIC,eAAe,GAAGL,KAAK,CAACK,eAL5B;AAAA,MAMIC,mBAAmB,GAAGN,KAAK,CAACO,aANhC;AAAA,MAOIA,aAAa,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,QAAjC,GAA4CA,mBAPhE;AAAA,MAQIE,oBAAoB,GAAGR,KAAK,CAACS,cARjC;AAAA,MASIA,cAAc,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,MAAlC,GAA2CA,oBAThE;AAAA,MAUIE,iBAAiB,GAAGV,KAAK,CAACL,WAV9B;AAAA,MAWIA,WAAW,GAAGe,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,CAAC,UAAD,CAA/B,GAA8CA,iBAXhE;AAAA,MAYIC,UAAU,GAAGX,KAAK,CAACW,UAZvB;AAAA,MAaIC,SAAS,GAAGZ,KAAK,CAACY,SAbtB;AAcA,MAAIC,YAAY,GAAGC,KAAK,CAACC,OAAN,CAAcpB,WAAd,IAA6BA,WAA7B,GAA2C,CAACA,WAAD,CAA9D;AACA,SAAOP,KAAK,CAAC4B,aAAN,CAAoB1B,OAApB,EAA6B;AAClCW,IAAAA,EAAE,EAAEA,EAD8B;AAElCC,IAAAA,KAAK,EAAEA,KAF2B;AAGlCR,IAAAA,MAAM,EAAEA;AAH0B,GAA7B,EAIJ,CAAC,CAACiB,UAAF,IAAgBvB,KAAK,CAAC4B,aAAN,CAAoB,MAApB,EAA4B;AAC7CJ,IAAAA,SAAS,EAAEvB,EAAE,CAAC,4BAAD,CADgC;AAE7Ca,IAAAA,KAAK,EAAEA,KAFsC;AAG7CR,IAAAA,MAAM,EAAEA,MAHqC;AAI7CuB,IAAAA,IAAI,EAAEN;AAJuC,GAA5B,CAJZ,EASHE,YAAY,CAACK,GAAb,CAAiB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACnC,WAAOhC,KAAK,CAAC4B,aAAN,CAAoB,MAApB,EAA4B;AACjCK,MAAAA,GAAG,EAAE,QAAQpB,EAAR,GAAa,QAAb,GAAwBkB,CAAxB,GAA4B,GAA5B,GAAkCC,CADN;AAEjCR,MAAAA,SAAS,EAAEvB,EAAE,CAAC,iBAAD,EAAoBuB,SAApB,CAFoB;AAGjCU,MAAAA,CAAC,EAAE9B,kBAAkB,CAAC;AACpBG,QAAAA,WAAW,EAAEwB,CADO;AAEpBzB,QAAAA,MAAM,EAAEA;AAFY,OAAD,CAHY;AAOjCS,MAAAA,MAAM,EAAEA,MAPyB;AAQjCC,MAAAA,WAAW,EAAEA,WARoB;AASjCC,MAAAA,eAAe,EAAEA,eATgB;AAUjCE,MAAAA,aAAa,EAAEA,aAVkB;AAWjCE,MAAAA,cAAc,EAAEA;AAXiB,KAA5B,CAAP;AAaD,GAdG,CATG,CAAP;AAwBD;AACDV,YAAY,CAACwB,SAAb,GAAyB;AACvBtB,EAAAA,EAAE,EAAEd,GAAG,CAACqC,MAAJ,CAAWC,UADQ;AAEvBvB,EAAAA,KAAK,EAAEf,GAAG,CAACuC,MAAJ,CAAWD,UAFK;AAGvB/B,EAAAA,MAAM,EAAEP,GAAG,CAACuC,MAAJ,CAAWD,UAHI;AAIvBb,EAAAA,SAAS,EAAEzB,GAAG,CAACqC,MAJQ;AAKvBb,EAAAA,UAAU,EAAExB,GAAG,CAACqC,MALO;AAMvBrB,EAAAA,MAAM,EAAEhB,GAAG,CAACqC,MANW;AAOvBpB,EAAAA,WAAW,EAAEjB,GAAG,CAACwC,SAAJ,CAAc,CAACxC,GAAG,CAACuC,MAAL,EAAavC,GAAG,CAACqC,MAAjB,CAAd,CAPU;AAQvBnB,EAAAA,eAAe,EAAElB,GAAG,CAACwC,SAAJ,CAAc,CAACxC,GAAG,CAACqC,MAAL,EAAarC,GAAG,CAACuC,MAAjB,CAAd,CARM;AASvBnB,EAAAA,aAAa,EAAEpB,GAAG,CAACyC,KAAJ,CAAU,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,SAA5B,CAAV,CATQ;AAUvBnB,EAAAA,cAAc,EAAEtB,GAAG,CAACwC,SAAJ,CAAc,CAACxC,GAAG,CAACqC,MAAL,EAAarC,GAAG,CAACuC,MAAjB,CAAd,CAVO;AAWvB/B,EAAAA,WAAW,EAAER,GAAG,CAAC0C;AAXM,CAAzB","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nimport { PatternOrientation } from '../constants';\n\nfunction pathForOrientation(_ref) {\n  var height = _ref.height,\n      orientation = _ref.orientation;\n\n  switch (orientation) {\n    case PatternOrientation.vertical:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n\n    case PatternOrientation.horizontal:\n      return \"M 0,\" + height / 2 + \" l \" + height + \",0\";\n\n    case PatternOrientation.diagonal:\n      return \"M 0,\" + height + \" l \" + height + \",\" + -height + \" M \" + -height / 4 + \",\" + height / 4 + \" l \" + height / 2 + \",\" + -height / 2 + \"\\n             M \" + 3 / 4 * height + \",\" + 5 / 4 * height + \" l \" + height / 2 + \",\" + -height / 2;\n\n    default:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n  }\n}\n\nexport default function PatternLines(_ref2) {\n  var id = _ref2.id,\n      width = _ref2.width,\n      height = _ref2.height,\n      stroke = _ref2.stroke,\n      strokeWidth = _ref2.strokeWidth,\n      strokeDasharray = _ref2.strokeDasharray,\n      _ref2$strokeLinecap = _ref2.strokeLinecap,\n      strokeLinecap = _ref2$strokeLinecap === void 0 ? 'square' : _ref2$strokeLinecap,\n      _ref2$shapeRendering = _ref2.shapeRendering,\n      shapeRendering = _ref2$shapeRendering === void 0 ? 'auto' : _ref2$shapeRendering,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? ['vertical'] : _ref2$orientation,\n      background = _ref2.background,\n      className = _ref2.className;\n  var orientations = Array.isArray(orientation) ? orientation : [orientation];\n  return React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && React.createElement(\"rect\", {\n    className: cx('vx-pattern-line-background'),\n    width: width,\n    height: height,\n    fill: background\n  }), orientations.map(function (o, i) {\n    return React.createElement(\"path\", {\n      key: \"vx-\" + id + \"-line-\" + o + \"-\" + i,\n      className: cx('vx-pattern-line', className),\n      d: pathForOrientation({\n        orientation: o,\n        height: height\n      }),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeLinecap: strokeLinecap,\n      shapeRendering: shapeRendering\n    });\n  }));\n}\nPatternLines.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number]),\n  orientation: _pt.array\n};"]},"metadata":{},"sourceType":"module"}