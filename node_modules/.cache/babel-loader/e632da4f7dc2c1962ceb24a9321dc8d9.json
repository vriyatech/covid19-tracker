{"ast":null,"code":"import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Path from './Path';\nexport default function PatternHexagons(_ref) {\n  var id = _ref.id,\n      height = _ref.height,\n      fill = _ref.fill,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      strokeLinecap = _ref.strokeLinecap,\n      shapeRendering = _ref.shapeRendering,\n      background = _ref.background,\n      className = _ref.className,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 3 : _ref$size;\n  var sqrtSize = Math.sqrt(size);\n  return React.createElement(Path, {\n    className: cx('vx-pattern-hexagon', className),\n    path: \"M \" + height + \",0 l \" + height + \",0 l \" + height / 2 + \",\" + height * sqrtSize / 2 + \" l \" + -height / 2 + \",\" + height * sqrtSize / 2 + \" l \" + -height + \",0 l \" + -height / 2 + \",\" + -height * sqrtSize / 2 + \" Z M 0,\" + height * sqrtSize / 2 + \" l \" + height / 2 + \",0 M \" + 3 * height + \",\" + height * sqrtSize / 2 + \" l \" + -height / 2 + \",0\",\n    id: id,\n    width: size,\n    height: sqrtSize,\n    fill: fill,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    strokeLinecap: strokeLinecap,\n    shapeRendering: shapeRendering,\n    background: background\n  });\n}\nPatternHexagons.propTypes = {\n  id: _pt.string.isRequired,\n  height: _pt.number.isRequired,\n  size: _pt.number,\n  fill: _pt.string,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number])\n};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/node_modules/@vx/pattern/esm/patterns/Hexagons.js"],"names":["_pt","React","cx","Path","PatternHexagons","_ref","id","height","fill","stroke","strokeWidth","strokeDasharray","strokeLinecap","shapeRendering","background","className","_ref$size","size","sqrtSize","Math","sqrt","createElement","path","width","propTypes","string","isRequired","number","oneOfType","oneOf"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Path from './Path';\nexport default function PatternHexagons(_ref) {\n  var id = _ref.id,\n      height = _ref.height,\n      fill = _ref.fill,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      strokeLinecap = _ref.strokeLinecap,\n      shapeRendering = _ref.shapeRendering,\n      background = _ref.background,\n      className = _ref.className,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 3 : _ref$size;\n  var sqrtSize = Math.sqrt(size);\n  return React.createElement(Path, {\n    className: cx('vx-pattern-hexagon', className),\n    path: \"M \" + height + \",0 l \" + height + \",0 l \" + height / 2 + \",\" + height * sqrtSize / 2 + \" l \" + -height / 2 + \",\" + height * sqrtSize / 2 + \" l \" + -height + \",0 l \" + -height / 2 + \",\" + -height * sqrtSize / 2 + \" Z M 0,\" + height * sqrtSize / 2 + \" l \" + height / 2 + \",0 M \" + 3 * height + \",\" + height * sqrtSize / 2 + \" l \" + -height / 2 + \",0\",\n    id: id,\n    width: size,\n    height: sqrtSize,\n    fill: fill,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    strokeLinecap: strokeLinecap,\n    shapeRendering: shapeRendering,\n    background: background\n  });\n}\nPatternHexagons.propTypes = {\n  id: _pt.string.isRequired,\n  height: _pt.number.isRequired,\n  size: _pt.number,\n  fill: _pt.string,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number])\n};"]},"metadata":{},"sourceType":"module"}