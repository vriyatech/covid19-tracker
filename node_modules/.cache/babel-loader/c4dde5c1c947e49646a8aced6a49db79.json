{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\src\\\\components\\\\BubblePlot.js\";\nimport React, { Component } from 'react';\nimport { ResponsiveBubble } from '@nivo/circle-packing';\nimport { interpolateMagma } from 'd3-scale-chromatic';\nimport { getDataFromRegion, generateTreeData } from '../utils/utils';\nimport * as str from '../utils/strings';\nexport default class BubblePlot extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      plotData: null,\n      currentNodePath: null\n    };\n\n    this.handleNodeClick = node => {\n      const region = node.path === str.GLOBAL_ZH ? [node.path] : node.path.split('.').reverse().slice(1);\n      this.props.regionToggle(region);\n    };\n  }\n\n  render() {\n    const {\n      data,\n      metric,\n      currentRegion,\n      date,\n      playing,\n      lang,\n      darkMode\n    } = this.props;\n    if (data == null) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 34\n      }\n    });\n    let plotData = {\n      name: str.GLOBAL_ZH,\n      displayName: lang === 'en' ? str.GLOBAL_EN : str.GLOBAL_ZH,\n      confirmedCount: data[str.GLOBAL_ZH].confirmedCount[date],\n      deadCount: data[str.GLOBAL_ZH].deadCount[date],\n      curedCount: data[str.GLOBAL_ZH].curedCount[date],\n      children: generateTreeData(data, date, lang)\n    };\n    let currentNodePath = currentRegion[0] === str.GLOBAL_ZH ? str.GLOBAL_ZH : [str.GLOBAL_ZH, ...currentRegion].reverse().join('.'); // TODO: Node does not exist when count is 0. Need to find the parent node that has non-zero count.\n\n    const currentData = getDataFromRegion(data, currentRegion);\n    const count = currentData[metric][date];\n    if (count == null || count === 0 || currentRegion[0] === str.US_ZH && currentRegion.length === 3 || currentRegion[0] === str.UK_ZH && currentRegion.length > 3) currentNodePath = [str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1)].reverse().join('.');\n    let displayNodePath = Object.keys(currentData).length > 4 ? currentNodePath : currentRegion[0] === str.GLOBAL_ZH ? str.GLOBAL_ZH : [str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1)].reverse().join('.');\n    if (currentRegion[0] === str.US_ZH && currentRegion.length > 1) displayNodePath = [str.GLOBAL_ZH, str.US_ZH].reverse().join('.');\n    if (currentRegion[0] === str.UK_ZH && currentRegion.length > 2) displayNodePath = [str.GLOBAL_ZH, ...currentRegion.slice(0, 2)].reverse().join('.');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bubble-plot-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveBubble, {\n      ref: this.bubble,\n      root: plotData,\n      theme: {\n        fontFamily: 'Saira, sans-serif',\n        tooltip: {\n          container: {\n            background: darkMode ? 'var(--darkest-grey)' : 'white'\n          }\n        }\n      },\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      tooltip: ({\n        color,\n        value,\n        data\n      }) => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"plot-tooltip\",\n        style: {\n          color: color === '#fff' && !darkMode ? '#222' : color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, data.displayName, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"plot-tooltip-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, ` ${data[metric]}`)),\n      identity: \"name\",\n      value: metric,\n      colors: [...[0.3, 0.4, 0.2, 0.1].map(x => interpolateMagma(1 - x)), '#fff'],\n      padding: 3,\n      enableLabel: true,\n      label: ({\n        data\n      }) => data.displayName,\n      labelTextColor: '#222',\n      labelSkipRadius: 8,\n      animate: !playing,\n      motionStiffness: 50,\n      motionDamping: 12,\n      onClick: this.handleNodeClick,\n      defs: [{\n        id: 'bubbleLines',\n        type: 'patternLines',\n        background: 'none',\n        color: 'inherit',\n        rotation: -45,\n        lineWidth: 4,\n        spacing: 5\n      }],\n      fill: [{\n        match: d => d.path === currentNodePath,\n        id: 'bubbleLines'\n      }],\n      currentNodePath: displayNodePath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/BubblePlot.js"],"names":["React","Component","ResponsiveBubble","interpolateMagma","getDataFromRegion","generateTreeData","str","BubblePlot","state","plotData","currentNodePath","handleNodeClick","node","region","path","GLOBAL_ZH","split","reverse","slice","props","regionToggle","render","data","metric","currentRegion","date","playing","lang","darkMode","name","displayName","GLOBAL_EN","confirmedCount","deadCount","curedCount","children","join","currentData","count","US_ZH","length","UK_ZH","displayNodePath","Object","keys","bubble","fontFamily","tooltip","container","background","top","right","bottom","left","color","value","map","x","id","type","rotation","lineWidth","spacing","match","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { ResponsiveBubble } from '@nivo/circle-packing'\r\nimport { interpolateMagma } from 'd3-scale-chromatic'\r\nimport { getDataFromRegion, generateTreeData } from '../utils/utils'\r\nimport * as str from '../utils/strings'\r\n\r\nexport default class BubblePlot extends Component {\r\n    state = {\r\n        plotData: null,\r\n        currentNodePath: null\r\n    }\r\n\r\n    // hack so that bubble plot can interact with other plots\r\n    handleNodeClick = (node) => {\r\n        const region = node.path === str.GLOBAL_ZH ? [ node.path ] : node.path.split('.').reverse().slice(1)\r\n        this.props.regionToggle(region)\r\n    }\r\n\r\n    render() {\r\n        const { data, metric, currentRegion, date, playing, lang, darkMode } = this.props\r\n        if (data == null) return <div />\r\n        let plotData = {\r\n            name: str.GLOBAL_ZH,\r\n            displayName: lang === 'en' ? str.GLOBAL_EN : str.GLOBAL_ZH,\r\n            confirmedCount: data[str.GLOBAL_ZH].confirmedCount[date],\r\n            deadCount: data[str.GLOBAL_ZH].deadCount[date],\r\n            curedCount: data[str.GLOBAL_ZH].curedCount[date],\r\n            children: generateTreeData(data, date, lang)\r\n        }\r\n\r\n        let currentNodePath =\r\n            currentRegion[0] === str.GLOBAL_ZH ? str.GLOBAL_ZH : [ str.GLOBAL_ZH, ...currentRegion ].reverse().join('.')\r\n\r\n        // TODO: Node does not exist when count is 0. Need to find the parent node that has non-zero count.\r\n        const currentData = getDataFromRegion(data, currentRegion)\r\n        const count = currentData[metric][date]\r\n        if (\r\n            count == null ||\r\n            count === 0 ||\r\n            (currentRegion[0] === str.US_ZH && currentRegion.length === 3) ||\r\n            (currentRegion[0] === str.UK_ZH && currentRegion.length > 3)\r\n        )\r\n            currentNodePath = [ str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1) ].reverse().join('.')\r\n\r\n        let displayNodePath =\r\n            Object.keys(currentData).length > 4\r\n                ? currentNodePath\r\n                : currentRegion[0] === str.GLOBAL_ZH\r\n                  ? str.GLOBAL_ZH\r\n                  : [ str.GLOBAL_ZH, ...currentRegion.slice(0, currentRegion.length - 1) ].reverse().join('.')\r\n\r\n        if (currentRegion[0] === str.US_ZH && currentRegion.length > 1)\r\n            displayNodePath = [ str.GLOBAL_ZH, str.US_ZH ].reverse().join('.')\r\n\r\n        if (currentRegion[0] === str.UK_ZH && currentRegion.length > 2)\r\n            displayNodePath = [ str.GLOBAL_ZH, ...currentRegion.slice(0, 2) ].reverse().join('.')\r\n\r\n        return (\r\n            <div className=\"bubble-plot-wrap\">\r\n                <ResponsiveBubble\r\n                    ref={this.bubble}\r\n                    root={plotData}\r\n                    theme={{\r\n                        fontFamily: 'Saira, sans-serif',\r\n                        tooltip: {\r\n                            container: {\r\n                                background: darkMode ? 'var(--darkest-grey)' : 'white'\r\n                            }\r\n                        }\r\n                    }}\r\n                    margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n                    tooltip={({ color, value, data }) => (\r\n                        <span\r\n                            className=\"plot-tooltip\"\r\n                            style={{ color: color === '#fff' && !darkMode ? '#222' : color }}\r\n                        >\r\n                            {data.displayName}\r\n                            <span className=\"plot-tooltip-bold\">{` ${data[metric]}`}</span>\r\n                        </span>\r\n                    )}\r\n                    identity=\"name\"\r\n                    value={metric}\r\n                    colors={[ ...[ 0.3, 0.4, 0.2, 0.1 ].map((x) => interpolateMagma(1 - x)), '#fff' ]}\r\n                    padding={3}\r\n                    enableLabel={true}\r\n                    label={({ data }) => data.displayName}\r\n                    labelTextColor={'#222'}\r\n                    labelSkipRadius={8}\r\n                    animate={!playing}\r\n                    motionStiffness={50}\r\n                    motionDamping={12}\r\n                    onClick={this.handleNodeClick}\r\n                    defs={[\r\n                        {\r\n                            id: 'bubbleLines',\r\n                            type: 'patternLines',\r\n                            background: 'none',\r\n                            color: 'inherit',\r\n                            rotation: -45,\r\n                            lineWidth: 4,\r\n                            spacing: 5\r\n                        }\r\n                    ]}\r\n                    fill={[\r\n                        {\r\n                            match: (d) => d.path === currentNodePath,\r\n                            id: 'bubbleLines'\r\n                        }\r\n                    ]}\r\n                    currentNodePath={displayNodePath}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}