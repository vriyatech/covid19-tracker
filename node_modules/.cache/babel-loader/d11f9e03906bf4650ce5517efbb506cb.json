{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\src\\\\components\\\\AnimationController.js\";\nimport React, { Component } from 'react';\nimport { MdPause, MdPlayArrow, MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport { nextDay, previousDay } from '../utils/utils';\nexport default class AminationController extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.animationLoop = () => setTimeout(() => {\n      if (this.props.playing) {\n        this.dateForward();\n        this.animationLoop();\n      }\n    }, 500);\n\n    this.dateForward = () => {\n      const {\n        date,\n        startDate,\n        endDate,\n        plotDates,\n        fullPlot,\n        handleDateChange\n      } = this.props;\n\n      if (!fullPlot) {\n        handleDateChange(nextDay(date, startDate, endDate));\n      } else {\n        handleDateChange(nextDay(date, plotDates[0], plotDates[1]));\n      }\n    };\n\n    this.dateBackward = () => {\n      const {\n        date,\n        startDate,\n        endDate,\n        plotDates,\n        fullPlot,\n        handleDateChange\n      } = this.props;\n\n      if (!fullPlot) {\n        handleDateChange(previousDay(date, startDate, endDate));\n      } else {\n        handleDateChange(previousDay(date, plotDates[0], plotDates[1]));\n      }\n    };\n\n    this.startAnimation = () => this.props.playingToggle();\n\n    this.stopAnimation = () => {\n      this.props.playingToggle();\n      this.forceUpdate();\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.playing) this.animationLoop();\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    return !this.props.playing;\n  }\n\n  render() {\n    const {\n      playing\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"anime-ctrl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `anime-ctrl-left-right ${playing ? 'anime-ctrl-playing' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MdChevronLeft, {\n      size: 30,\n      onClick: this.dateBackward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"anime-ctrl-play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, playing ? /*#__PURE__*/React.createElement(MdPause, {\n      size: 30,\n      onClick: this.stopAnimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(MdPlayArrow, {\n      size: 30,\n      onClick: this.startAnimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `anime-ctrl-left-right ${playing ? 'anime-ctrl-playing' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MdChevronRight, {\n      size: 30,\n      onClick: this.dateForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/AnimationController.js"],"names":["React","Component","MdPause","MdPlayArrow","MdChevronLeft","MdChevronRight","nextDay","previousDay","AminationController","animationLoop","setTimeout","props","playing","dateForward","date","startDate","endDate","plotDates","fullPlot","handleDateChange","dateBackward","startAnimation","playingToggle","stopAnimation","forceUpdate","componentDidUpdate","prevProps","prevState","shouldComponentUpdate","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { MdPause, MdPlayArrow, MdChevronLeft, MdChevronRight } from 'react-icons/md'\r\nimport { nextDay, previousDay } from '../utils/utils'\r\n\r\nexport default class AminationController extends Component {\r\n    animationLoop = () =>\r\n        setTimeout(() => {\r\n            if (this.props.playing) {\r\n                this.dateForward()\r\n                this.animationLoop()\r\n            }\r\n        }, 500)\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.playing) this.animationLoop()\r\n    }\r\n\r\n    shouldComponentUpdate(prevProps, prevState) {\r\n        return !this.props.playing\r\n    }\r\n\r\n    dateForward = () => {\r\n        const { date, startDate, endDate, plotDates, fullPlot, handleDateChange } = this.props\r\n        if (!fullPlot) {\r\n            handleDateChange(nextDay(date, startDate, endDate))\r\n        } else {\r\n            handleDateChange(nextDay(date, plotDates[0], plotDates[1]))\r\n        }\r\n    }\r\n\r\n    dateBackward = () => {\r\n        const { date, startDate, endDate, plotDates, fullPlot, handleDateChange } = this.props\r\n        if (!fullPlot) {\r\n            handleDateChange(previousDay(date, startDate, endDate))\r\n        } else {\r\n            handleDateChange(previousDay(date, plotDates[0], plotDates[1]))\r\n        }\r\n    }\r\n\r\n    startAnimation = () => this.props.playingToggle()\r\n\r\n    stopAnimation = () => {\r\n        this.props.playingToggle()\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        const { playing } = this.props\r\n        return (\r\n            <div className=\"anime-ctrl\">\r\n                <div className={`anime-ctrl-left-right ${playing ? 'anime-ctrl-playing' : ''}`}>\r\n                    <MdChevronLeft size={30} onClick={this.dateBackward} />\r\n                </div>\r\n                <div className=\"anime-ctrl-play\">\r\n                    {playing ? (\r\n                        <MdPause size={30} onClick={this.stopAnimation} />\r\n                    ) : (\r\n                        <MdPlayArrow size={30} onClick={this.startAnimation} />\r\n                    )}\r\n                </div>\r\n                <div className={`anime-ctrl-left-right ${playing ? 'anime-ctrl-playing' : ''}`}>\r\n                    <MdChevronRight size={30} onClick={this.dateForward} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}