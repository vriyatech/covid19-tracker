{"ast":null,"code":"import React,{Component,Fragment}from'react';import Questions from'./switchquestion';import{Table}from'reactstrap';var Tableview=function Tableview(_ref){var tabledata=_ref.tabledata,lan=_ref.lan;return/*#__PURE__*/React.createElement(\"tbody\",null,tabledata.map(function(data,i){return/*#__PURE__*/React.createElement(\"tr\",{key:i},/*#__PURE__*/React.createElement(\"td\",null,data.dateValue),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Questions,{questionid:data.questionId,lan:lan})),/*#__PURE__*/React.createElement(\"td\",null,data.address),/*#__PURE__*/React.createElement(\"td\",null,lan==='en'?data.answer:data.answer===\"yes\"?'छ':'छैन'),/*#__PURE__*/React.createElement(\"td\",null,data.countValue));}));};export var NepalView=function NepalView(_ref2){var npcondition=_ref2.npcondition,lan=_ref2.lan;return/*#__PURE__*/React.createElement(\"div\",null,npcondition.map(function(data,i){return/*#__PURE__*/React.createElement(Fragment,{key:i},/*#__PURE__*/React.createElement(\"span\",null,lan==='en'?[data.countryregion+': ']:\"नेपाल: \"),/*#__PURE__*/React.createElement(\"span\",null,lan==='en'?data.lastupdate.replace('T',\" | Time: \"):data.lastupdate.replace(\"T\",\" | समय: \")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{key:'confirmed'+i},lan==='en'?'Confirmed: ':\"पुष्टि भयो: \",data.confirmed),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{key:'deaths'+i},lan==='en'?'Deaths: ':\"मृत्यु: \",data.deaths),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{key:'recovered'+i},lan==='en'?'Recovered: ':\"निको: \",data.recovered));}));};export var WorldView=function WorldView(_ref3){var worldcondition=_ref3.worldcondition,lan=_ref3.lan;return/*#__PURE__*/React.createElement(Table,{striped:true,bordered:true,hover:true},/*#__PURE__*/React.createElement(Fragment,{key:\"worldcondition\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,lan==='en'?\"World Wide\":\"विश्वव्यापी\"),/*#__PURE__*/React.createElement(\"th\",null,Date()))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",{key:\"confirmed\"},/*#__PURE__*/React.createElement(\"td\",null,lan==='en'?'Confirmed:':\"पुष्टि भयो:\"),/*#__PURE__*/React.createElement(\"td\",null,worldcondition.confirmed)),/*#__PURE__*/React.createElement(\"tr\",{key:\"deaths\"},/*#__PURE__*/React.createElement(\"td\",null,lan==='en'?'Deaths:':\"मृत्यु:\"),/*#__PURE__*/React.createElement(\"td\",null,worldcondition.deaths)),/*#__PURE__*/React.createElement(\"tr\",{key:\"recovered\"},/*#__PURE__*/React.createElement(\"td\",null,lan==='en'?'Recovered:':\"निको:\"),/*#__PURE__*/React.createElement(\"td\",null,worldcondition.recovered)))));};export var RecordView=function RecordView(_ref4){var record=_ref4.record,lan=_ref4.lan;return/*#__PURE__*/React.createElement(Table,{striped:true,bordered:true,hover:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,lan==='en'?\"Province\":\"प्रदेश\"),/*#__PURE__*/React.createElement(\"th\",null,lan==='en'?\"District\":\"जिल्ला\"),/*#__PURE__*/React.createElement(\"th\",null,lan==='en'?\"Municipality\":\"नगरपालिका\"),/*#__PURE__*/React.createElement(\"th\",null,lan==='en'?\"Risk\":\"जोखिम\"),/*#__PURE__*/React.createElement(\"th\",null,lan==='en'?\"Count\":\"गणना\"))),/*#__PURE__*/React.createElement(\"tbody\",null,record.map(function(data,i){return/*#__PURE__*/React.createElement(\"tr\",{key:'row'+i},/*#__PURE__*/React.createElement(\"td\",null,data.province),/*#__PURE__*/React.createElement(\"td\",null,data.district),/*#__PURE__*/React.createElement(\"td\",null,data.municipality),/*#__PURE__*/React.createElement(\"td\",null,data.risk),/*#__PURE__*/React.createElement(\"td\",null,data.countValue));})));};export default Tableview;","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/Tableview.js"],"names":["React","Component","Fragment","Questions","Table","Tableview","tabledata","lan","map","data","i","dateValue","questionId","address","answer","countValue","NepalView","npcondition","countryregion","lastupdate","replace","confirmed","deaths","recovered","WorldView","worldcondition","Date","RecordView","record","province","district","municipality","risk"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport Questions from './switchquestion'\r\nimport {Table  } from 'reactstrap';\r\n\r\nconst Tableview = ({tabledata,lan}) => (\r\n        <tbody>\r\n        {tabledata.map( (data,i) =>\r\n            <tr key = {i}>\r\n                <td>{data.dateValue}</td>\r\n                <td><Questions questionid={data.questionId} lan={lan} /></td>\r\n                <td>{data.address}</td>\r\n                <td>{lan==='en'?data.answer:data.answer===\"yes\"?'छ':'छैन'}</td>\r\n                <td>{data.countValue}</td>\r\n            </tr>)}\r\n        </tbody>\r\n);\r\n\r\nexport const NepalView = ({npcondition, lan}) => (<div>\r\n\r\n       \r\n            {npcondition.map( (data,i) =><Fragment key={i}>\r\n            <span>{lan==='en'?[data.countryregion+': ']:\"नेपाल: \"}</span><span>{lan==='en'?data.lastupdate.replace('T',\" | Time: \"):data.lastupdate.replace(\"T\",\" | समय: \")}</span>\r\n            <br/>\r\n                    <span key = {'confirmed'+i}>\r\n                       {lan==='en'?'Confirmed: ':\"पुष्टि भयो: \"}\r\n                        {data.confirmed}\r\n                    </span><br/>\r\n                    <span key = {'deaths'+i}>\r\n                       {lan==='en'?'Deaths: ':\"मृत्यु: \"}\r\n                       {data.deaths}\r\n                    </span><br/>\r\n                    <span key = {'recovered'+i}>\r\n                        {lan==='en'?'Recovered: ':\"निको: \"}\r\n                        {data.recovered}\r\n                    </span>\r\n                </Fragment>)}</div>\r\n\r\n\r\n);\r\n\r\nexport const WorldView = ({worldcondition, lan}) => (\r\n    <Table striped bordered hover>\r\n       \r\n            <Fragment key=\"worldcondition\">\r\n            <thead><tr><th>{lan==='en'?\"World Wide\":\"विश्वव्यापी\"}</th><th>{Date()}</th></tr></thead>\r\n            <tbody>\r\n                    <tr key = 'confirmed'>\r\n                        <td>{lan==='en'?'Confirmed:':\"पुष्टि भयो:\"}</td>\r\n                        <td>{worldcondition.confirmed}</td>\r\n                    </tr>\r\n                    <tr key = 'deaths'>\r\n                        <td>{lan==='en'?'Deaths:':\"मृत्यु:\"}</td>\r\n                        <td>{worldcondition.deaths}</td>\r\n                    </tr>\r\n                    <tr key = 'recovered'>\r\n                        <td>{lan==='en'?'Recovered:':\"निको:\"}</td>\r\n                        <td>{worldcondition.recovered}</td>\r\n                    </tr>\r\n                </tbody></Fragment>\r\n  \r\n    </Table>\r\n\r\n);\r\n\r\n\r\nexport const RecordView = ({record, lan}) => (\r\n    <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n                <th>{lan==='en'?\"Province\":\"प्रदेश\"}</th>\r\n                <th>{lan==='en'?\"District\":\"जिल्ला\"}</th>\r\n                <th>{lan==='en'?\"Municipality\":\"नगरपालिका\"}</th>\r\n                {/* <th>{lan==='en'?\"Low Risk\":\"कम जोखिम\"}</th> */}\r\n                {/* <th>{lan==='en'?\"Potential Risk\":\"सम्भावित जोखिम\"}</th> */}\r\n                <th>{lan==='en'?\"Risk\":\"जोखिम\"}</th>\r\n                <th>{lan==='en'?\"Count\":\"गणना\"}</th>\r\n                \r\n                               \r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {record.map( (data,i) =>\r\n                <tr key={'row'+i}>\r\n                    <td>{data.province}</td>\r\n                    <td>{data.district}</td>\r\n                    <td>{data.municipality}</td>\r\n                    <td>{data.risk}</td>\r\n                    <td>{data.countValue}</td>\r\n                    \r\n                    \r\n                        \r\n                </tr>)\r\n            }\r\n        </tbody>\r\n        \r\n    </Table>\r\n\r\n\r\n);\r\n\r\nexport default Tableview;"]},"metadata":{},"sourceType":"module"}