{"ast":null,"code":"import _classCallCheck from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component,Fragment}from'react';import{Slider,Rail,Handles,Tracks,Ticks}from'react-compound-slider';import format from'date-fns/format';import{scaleTime}from'd3-scale';import{timeDay}from'd3-time';import{parseDate}from'../utils/utils';function formatTick(ms){return format(new Date(ms),'M/d');}var DateSlider=/*#__PURE__*/function(_Component){_inherits(DateSlider,_Component);var _super=_createSuper(DateSlider);function DateSlider(){_classCallCheck(this,DateSlider);return _super.apply(this,arguments);}_createClass(DateSlider,[{key:\"render\",value:function render(){var _this$props=this.props,date=_this$props.date,startDate=_this$props.startDate,endDate=_this$props.endDate,handleDateChange=_this$props.handleDateChange,handleTempDateChange=_this$props.handleTempDateChange,fullMap=_this$props.fullMap,fullPlot=_this$props.fullPlot,plotDates=_this$props.plotDates;var min=parseDate(startDate);var max=parseDate(endDate);var numberOfDays=(max-min)/(1000*3600*24);var dateTicksInterval=Math.round(numberOfDays/(!fullMap?10:15));var dateTicks=scaleTime().domain([min,max]).ticks(// hack to fix unwanted behavior (https://github.com/d3/d3/issues/2240)\ntimeDay.filter(function(d){return timeDay.count(0,d)%dateTicksInterval===0;})).map(function(d){return+d;});return/*#__PURE__*/React.createElement(Slider,{className:\"date-slider\",mode:1,step:1000*60*60*24,domain:[+min,+max],onChange:function onChange(time){if(!fullPlot)handleDateChange(format(time[0],'yyyy-MM-dd'));},onUpdate:handleTempDateChange,values:!fullPlot?[+parseDate(date)]:plotDates.map(function(x){return+parseDate(x);})},/*#__PURE__*/React.createElement(Rail,null,function(_ref){var getRailProps=_ref.getRailProps;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",Object.assign({className:\"date-slider-rail-outer\"},getRailProps())),/*#__PURE__*/React.createElement(\"div\",{className:\"date-slider-rail-inner\"}));}),/*#__PURE__*/React.createElement(Handles,null,function(_ref2){var handles=_ref2.handles,getHandleProps=_ref2.getHandleProps;return/*#__PURE__*/React.createElement(\"div\",null,handles.map(function(handle,index){return/*#__PURE__*/React.createElement(Fragment,{key:\"handle-\".concat(index)},/*#__PURE__*/React.createElement(\"div\",Object.assign({className:\"date-slider-handle-outer\",style:{left:\"\".concat(handle.percent,\"%\")}},getHandleProps(handle.id))),/*#__PURE__*/React.createElement(\"div\",{role:\"slider\",className:\"date-slider-handle-inner\"// eslint-disable-next-line\n,\"aria-valuemin\":+min// eslint-disable-next-line\n,\"aria-valuemax\":+max,\"aria-valuenow\":handle.value,style:{left:\"\".concat(handle.percent,\"%\")}}));}));}),/*#__PURE__*/React.createElement(Tracks,{left:!fullPlot,right:false},function(_ref3){var tracks=_ref3.tracks,getTrackProps=_ref3.getTrackProps;return/*#__PURE__*/React.createElement(\"div\",null,tracks.map(function(_ref4){var id=_ref4.id,source=_ref4.source,target=_ref4.target;return/*#__PURE__*/React.createElement(\"div\",Object.assign({key:\"track-\".concat(id),className:\"date-slider-track\",style:{left:\"\".concat(source.percent,\"%\"),width:\"\".concat(target.percent-source.percent,\"%\")}},getTrackProps()));}));}),/*#__PURE__*/React.createElement(Ticks,{values:dateTicks},function(_ref5){var ticks=_ref5.ticks;return/*#__PURE__*/React.createElement(\"div\",null,ticks.map(function(tick,index){return/*#__PURE__*/React.createElement(\"div\",{key:\"tick-\".concat(index)},/*#__PURE__*/React.createElement(\"div\",{className:\"date-slider-tick\",style:{left:\"\".concat(tick.percent,\"%\")}}),/*#__PURE__*/React.createElement(\"div\",{className:\"date-slider-tick-text\",style:{marginLeft:\"\".concat(-(100/ticks.length)/2,\"%\"),width:\"\".concat(100/ticks.length,\"%\"),left:\"\".concat(tick.percent,\"%\")}},formatTick(tick.value)));}));}));}}]);return DateSlider;}(Component);export{DateSlider as default};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/DateSlider.js"],"names":["React","Component","Fragment","Slider","Rail","Handles","Tracks","Ticks","format","scaleTime","timeDay","parseDate","formatTick","ms","Date","DateSlider","props","date","startDate","endDate","handleDateChange","handleTempDateChange","fullMap","fullPlot","plotDates","min","max","numberOfDays","dateTicksInterval","Math","round","dateTicks","domain","ticks","filter","d","count","map","time","x","getRailProps","handles","getHandleProps","handle","index","left","percent","id","value","tracks","getTrackProps","source","target","width","tick","marginLeft","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\r\nimport format from 'date-fns/format'\r\nimport { scaleTime } from 'd3-scale'\r\nimport { timeDay } from 'd3-time'\r\nimport { parseDate } from '../utils/utils'\r\n\r\nfunction formatTick(ms) {\r\n    return format(new Date(ms), 'M/d')\r\n}\r\n\r\nexport default class DateSlider extends Component {\r\n    render() {\r\n        const {\r\n            date,\r\n            startDate,\r\n            endDate,\r\n            handleDateChange,\r\n            handleTempDateChange,\r\n            fullMap,\r\n            fullPlot,\r\n            plotDates\r\n        } = this.props\r\n        const min = parseDate(startDate)\r\n        const max = parseDate(endDate)\r\n\r\n        const numberOfDays = (max - min) / (1000 * 3600 * 24)\r\n        const dateTicksInterval = Math.round(numberOfDays / (!fullMap ? 10 : 15))\r\n\r\n        const dateTicks = scaleTime()\r\n            .domain([ min, max ])\r\n            .ticks(\r\n                // hack to fix unwanted behavior (https://github.com/d3/d3/issues/2240)\r\n                timeDay.filter(function(d) {\r\n                    return timeDay.count(0, d) % dateTicksInterval === 0\r\n                })\r\n            )\r\n            .map((d) => +d)\r\n\r\n        return (\r\n            <Slider\r\n                className=\"date-slider\"\r\n                mode={1}\r\n                step={1000 * 60 * 60 * 24}\r\n                domain={[ +min, +max ]}\r\n                onChange={(time) => {\r\n                    if (!fullPlot) handleDateChange(format(time[0], 'yyyy-MM-dd'))\r\n                }}\r\n                onUpdate={handleTempDateChange}\r\n                values={!fullPlot ? [ +parseDate(date) ] : plotDates.map((x) => +parseDate(x))}\r\n            >\r\n                <Rail>\r\n                    {({ getRailProps }) => (\r\n                        <Fragment>\r\n                            <div className=\"date-slider-rail-outer\" {...getRailProps()} />\r\n                            <div className=\"date-slider-rail-inner\" />\r\n                        </Fragment>\r\n                    )}\r\n                </Rail>\r\n                <Handles>\r\n                    {({ handles, getHandleProps }) => (\r\n                        <div>\r\n                            {handles.map((handle, index) => (\r\n                                <Fragment key={`handle-${index}`}>\r\n                                    <div\r\n                                        className=\"date-slider-handle-outer\"\r\n                                        style={{\r\n                                            left: `${handle.percent}%`\r\n                                        }}\r\n                                        {...getHandleProps(handle.id)}\r\n                                    />\r\n                                    <div\r\n                                        role=\"slider\"\r\n                                        className=\"date-slider-handle-inner\"\r\n                                        // eslint-disable-next-line\r\n                                        aria-valuemin={+min}\r\n                                        // eslint-disable-next-line\r\n                                        aria-valuemax={+max}\r\n                                        aria-valuenow={handle.value}\r\n                                        style={{\r\n                                            left: `${handle.percent}%`\r\n                                        }}\r\n                                    />\r\n                                </Fragment>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </Handles>\r\n                <Tracks left={!fullPlot} right={false}>\r\n                    {({ tracks, getTrackProps }) => (\r\n                        <div>\r\n                            {tracks.map(({ id, source, target }) => (\r\n                                <div\r\n                                    key={`track-${id}`}\r\n                                    className=\"date-slider-track\"\r\n                                    style={{\r\n                                        left: `${source.percent}%`,\r\n                                        width: `${target.percent - source.percent}%`\r\n                                    }}\r\n                                    {...getTrackProps()}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </Tracks>\r\n                <Ticks values={dateTicks}>\r\n                    {({ ticks }) => (\r\n                        <div>\r\n                            {ticks.map((tick, index) => (\r\n                                <div key={`tick-${index}`}>\r\n                                    <div\r\n                                        className=\"date-slider-tick\"\r\n                                        style={{\r\n                                            left: `${tick.percent}%`\r\n                                        }}\r\n                                    />\r\n                                    <div\r\n                                        className=\"date-slider-tick-text\"\r\n                                        style={{\r\n                                            marginLeft: `${-(100 / ticks.length) / 2}%`,\r\n                                            width: `${100 / ticks.length}%`,\r\n                                            left: `${tick.percent}%`\r\n                                        }}\r\n                                    >\r\n                                        {formatTick(tick.value)}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </Ticks>\r\n            </Slider>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}