{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\src\\\\components\\\\MainCounts.js\";\nimport React, { Component } from 'react';\nimport { metricText, getDataFromRegion, previousDay } from '../utils/utils';\nimport { isMobile, isIPad13 } from 'react-device-detect';\nimport i18n from '../data/i18n.yml';\nexport default class MainCounts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showNewCases: {\n        confirmedCount: false,\n        deadCount: false,\n        curedCount: false\n      }\n    };\n\n    this.toggleView = metric => {\n      let showNewCases = this.state.showNewCases;\n      showNewCases[metric] = !showNewCases[metric];\n      this.setState({\n        showNewCases\n      });\n    };\n  }\n\n  render() {\n    const {\n      data,\n      currentRegion,\n      date,\n      lang,\n      fullPlot\n    } = this.props;\n    if (data == null) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 34\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"counts-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, !fullPlot && ['confirmedCount', 'deadCount', 'curedCount'].map(metric => {\n      const count = Object.keys(getDataFromRegion(data, currentRegion)[metric]).length > 0 ? getDataFromRegion(data, currentRegion)[metric][date] : '—';\n      const preDate = previousDay(date, '2019-09-01', '2050-01-01');\n      const preCount = Object.keys(getDataFromRegion(data, currentRegion)[metric]).length > 0 ? getDataFromRegion(data, currentRegion)[metric][preDate] : 0;\n      let diff = 0;\n      if (parseInt(count) != null && parseInt(preCount) != null) diff = parseInt(count) - parseInt(preCount);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `${metric}-number`,\n        className: \"count-wrap\",\n        onMouseEnter: () => isMobile || isIPad13 ? null : this.toggleView(metric),\n        onMouseLeave: () => isMobile || isIPad13 ? null : this.toggleView(metric),\n        onTouchStart: () => this.toggleView(metric),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, !this.state.showNewCases[metric] ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, count ? count : 0) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, diff ? diff : '—'), !this.state.showNewCases[metric] ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"count-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }, metricText[metric][lang]) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"count-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, i18n.NEWCASE[lang]));\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/MainCounts.js"],"names":["React","Component","metricText","getDataFromRegion","previousDay","isMobile","isIPad13","i18n","MainCounts","state","showNewCases","confirmedCount","deadCount","curedCount","toggleView","metric","setState","render","data","currentRegion","date","lang","fullPlot","props","map","count","Object","keys","length","preDate","preCount","diff","parseInt","NEWCASE"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { metricText, getDataFromRegion, previousDay } from '../utils/utils'\r\nimport { isMobile, isIPad13 } from 'react-device-detect'\r\nimport i18n from '../data/i18n.yml'\r\n\r\nexport default class MainCounts extends Component {\r\n    state = {\r\n        showNewCases: {\r\n            confirmedCount: false,\r\n            deadCount: false,\r\n            curedCount: false\r\n        }\r\n    }\r\n\r\n    toggleView = (metric) => {\r\n        let showNewCases = this.state.showNewCases\r\n        showNewCases[metric] = !showNewCases[metric]\r\n        this.setState({ showNewCases })\r\n    }\r\n\r\n    render() {\r\n        const { data, currentRegion, date, lang, fullPlot } = this.props\r\n        if (data == null) return <div />\r\n\r\n        return (\r\n            <div className=\"counts-wrap\">\r\n                {!fullPlot &&\r\n                    [ 'confirmedCount', 'deadCount', 'curedCount' ].map((metric) => {\r\n                        const count =\r\n                            Object.keys(getDataFromRegion(data, currentRegion)[metric]).length > 0\r\n                                ? getDataFromRegion(data, currentRegion)[metric][date]\r\n                                : '—'\r\n                        const preDate = previousDay(date, '2019-09-01', '2050-01-01')\r\n\r\n                        const preCount =\r\n                            Object.keys(getDataFromRegion(data, currentRegion)[metric]).length > 0\r\n                                ? getDataFromRegion(data, currentRegion)[metric][preDate]\r\n                                : 0\r\n                        let diff = 0\r\n                        if (parseInt(count) != null && parseInt(preCount) != null)\r\n                            diff = parseInt(count) - parseInt(preCount)\r\n\r\n                        return (\r\n                            <div\r\n                                key={`${metric}-number`}\r\n                                className=\"count-wrap\"\r\n                                onMouseEnter={() => (isMobile || isIPad13 ? null : this.toggleView(metric))}\r\n                                onMouseLeave={() => (isMobile || isIPad13 ? null : this.toggleView(metric))}\r\n                                onTouchStart={() => this.toggleView(metric)}\r\n                            >\r\n                                {!this.state.showNewCases[metric] ? (\r\n                                    <div className=\"count\">{count ? count : 0}</div>\r\n                                ) : (\r\n                                    <div className=\"count\">{diff ? diff : '—'}</div>\r\n                                )}\r\n                                {!this.state.showNewCases[metric] ? (\r\n                                    <div className=\"count-title\">{metricText[metric][lang]}</div>\r\n                                ) : (\r\n                                    <div className=\"count-title\">{i18n.NEWCASE[lang]}</div>\r\n                                )}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}