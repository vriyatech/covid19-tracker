{"ast":null,"code":"import _objectSpread from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ADD_RECORD,ADD_RECORD_SUCCESS,ADD_RECORD_FAIL}from\"../actions/actionTypes\";var initialState={newRecord:[],fetching:false,error:undefined};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_RECORD:return _objectSpread({},initialState,{fetching:true});case ADD_RECORD_SUCCESS:return _objectSpread({},initialState,{fetching:false,newRecord:action.payload});case ADD_RECORD_FAIL:return _objectSpread({},initialState,{fetching:false,error:action.error});default:return state;}});","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/redux/reducer/checkSymptomReducer.js"],"names":["ADD_RECORD","ADD_RECORD_SUCCESS","ADD_RECORD_FAIL","initialState","newRecord","fetching","error","undefined","state","action","type","payload"],"mappings":"qKAAA,OACEA,UADF,CAEEC,kBAFF,CAGEC,eAHF,KAIO,wBAJP,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,EADQ,CAEnBC,QAAQ,CAAE,KAFS,CAGnBC,KAAK,CAAEC,SAHY,CAArB,CAMA,eAAe,UAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CAC/C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,UAAL,CACE,wBACKG,YADL,EAEEE,QAAQ,CAAE,IAFZ,GAIF,IAAKJ,CAAAA,kBAAL,CACE,wBACKE,YADL,EAEEE,QAAQ,CAAE,KAFZ,CAGED,SAAS,CAAEK,MAAM,CAACE,OAHpB,GAKF,IAAKT,CAAAA,eAAL,CACE,wBACKC,YADL,EAEEE,QAAQ,CAAE,KAFZ,CAGEC,KAAK,CAAEG,MAAM,CAACH,KAHhB,GAKF,QACE,MAAOE,CAAAA,KAAP,CAnBJ,CAqBD,CAtBD","sourcesContent":["import {\r\n  ADD_RECORD,\r\n  ADD_RECORD_SUCCESS,\r\n  ADD_RECORD_FAIL,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  newRecord: [],\r\n  fetching: false,\r\n  error: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_RECORD:\r\n      return {\r\n        ...initialState,\r\n        fetching: true\r\n      };\r\n    case ADD_RECORD_SUCCESS:\r\n      return {\r\n        ...initialState,\r\n        fetching: false,\r\n        newRecord: action.payload\r\n      };\r\n    case ADD_RECORD_FAIL:\r\n      return {\r\n        ...initialState,\r\n        fetching: false,\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}