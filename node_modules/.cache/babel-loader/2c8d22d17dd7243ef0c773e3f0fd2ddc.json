{"ast":null,"code":"import _objectSpread from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component,Fragment}from'react';import{MdArrowDropDownCircle}from'react-icons/md';import{UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem}from'reactstrap';import{plotTypes}from'../utils/plot_types';import{getDataFromRegion}from'../utils/utils';import*as str from'../utils/strings';import i18n from'../data/i18n.yml';var PlotSelector=/*#__PURE__*/function(_Component){_inherits(PlotSelector,_Component);var _super=_createSuper(PlotSelector);function PlotSelector(){var _this;_classCallCheck(this,PlotSelector);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={dropdownOpen:false,height:-1};_this.updateHeight=function(){var height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;_this.setState({height:height});};return _this;}_createClass(PlotSelector,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateHeight();window.addEventListener('resize',this.updateHeight);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.updateHeight);}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,currentPlotType=_this$props.currentPlotType,currentRegion=_this$props.currentRegion,lang=_this$props.lang,data=_this$props.data,onPlotTypeChange=_this$props.onPlotTypeChange;var plotParameters=plotTypes[currentPlotType];var currentRegionIsGlobal=currentRegion.length===1&&currentRegion[0]===str.GLOBAL_ZH;var hasSubregions=Object.keys(getDataFromRegion(data,currentRegion)).length>4||currentRegionIsGlobal;return/*#__PURE__*/React.createElement(UncontrolledDropdown,{className:\"\"},/*#__PURE__*/React.createElement(DropdownToggle,{tag:\"span\",className:\"line-plot-title\",\"data-toggle\":\"dropdown\",\"aria-expanded\":this.state.dropdownOpen},/*#__PURE__*/React.createElement(\"span\",null,plotParameters.text[lang]),/*#__PURE__*/React.createElement(MdArrowDropDownCircle,{size:20,className:\"dropdown-arrow\"})),/*#__PURE__*/React.createElement(DropdownMenu,{modifiers:{setMaxHeight:{enabled:true,order:890,fn:function fn(data){return _objectSpread({},data,{styles:_objectSpread({},data.styles,{overflowY:'auto',maxHeight:_this2.state.height*0.6})});}}}},Object.keys(plotTypes).map(function(plotType){return(// no One-vs-Rest comparison plot when current region is Global\nplotType==='plot_one_vs_rest'&&currentRegionIsGlobal?/*#__PURE__*/React.createElement(\"div\",{key:\"dropdown-\".concat(plotType)}):plotTypes[plotType].subregions&&!hasSubregions?/*#__PURE__*/React.createElement(\"div\",{key:\"dropdown-\".concat(plotType)}):/*#__PURE__*/React.createElement(Fragment,{key:\"dropdown-\".concat(plotType)},plotType==='plot_basic'&&hasSubregions&&/*#__PURE__*/React.createElement(DropdownItem,{header:true},i18n.OVERALL[lang]),plotType==='plot_ranking'&&hasSubregions&&/*#__PURE__*/React.createElement(DropdownItem,{divider:true}),plotType==='plot_ranking'&&hasSubregions&&/*#__PURE__*/React.createElement(DropdownItem,{header:true},i18n.SUBREGIONS[lang]),/*#__PURE__*/React.createElement(DropdownItem,{className:currentPlotType===plotType?'current':'',onClick:function onClick(){onPlotTypeChange(plotType);_this2.setState({dropdownOpen:!_this2.state.dropdownOpen});}},plotTypes[plotType].text[lang])));})));}}]);return PlotSelector;}(Component);export{PlotSelector as default};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/PlotSelector.js"],"names":["React","Component","Fragment","MdArrowDropDownCircle","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","plotTypes","getDataFromRegion","str","i18n","PlotSelector","state","dropdownOpen","height","updateHeight","window","innerHeight","document","documentElement","clientHeight","body","setState","addEventListener","removeEventListener","props","currentPlotType","currentRegion","lang","data","onPlotTypeChange","plotParameters","currentRegionIsGlobal","length","GLOBAL_ZH","hasSubregions","Object","keys","text","setMaxHeight","enabled","order","fn","styles","overflowY","maxHeight","map","plotType","subregions","OVERALL","SUBREGIONS"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { MdArrowDropDownCircle } from 'react-icons/md'\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { plotTypes } from '../utils/plot_types'\r\nimport { getDataFromRegion } from '../utils/utils'\r\nimport * as str from '../utils/strings'\r\nimport i18n from '../data/i18n.yml'\r\n\r\nexport default class PlotSelector extends Component {\r\n    state = {\r\n        dropdownOpen: false,\r\n        height: -1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateHeight()\r\n        window.addEventListener('resize', this.updateHeight)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateHeight)\r\n    }\r\n\r\n    updateHeight = () => {\r\n        const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n        this.setState({ height })\r\n    }\r\n\r\n    render() {\r\n        const { currentPlotType, currentRegion, lang, data, onPlotTypeChange } = this.props\r\n        const plotParameters = plotTypes[currentPlotType]\r\n        const currentRegionIsGlobal = currentRegion.length === 1 && currentRegion[0] === str.GLOBAL_ZH\r\n        const hasSubregions = Object.keys(getDataFromRegion(data, currentRegion)).length > 4 || currentRegionIsGlobal\r\n\r\n        return (\r\n            <UncontrolledDropdown className=\"\">\r\n                <DropdownToggle\r\n                    tag=\"span\"\r\n                    className=\"line-plot-title\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-expanded={this.state.dropdownOpen}\r\n                >\r\n                    <span>{plotParameters.text[lang]}</span>\r\n                    <MdArrowDropDownCircle size={20} className=\"dropdown-arrow\" />\r\n                </DropdownToggle>\r\n                <DropdownMenu\r\n                    modifiers={{\r\n                        setMaxHeight: {\r\n                            enabled: true,\r\n                            order: 890,\r\n                            fn: (data) => {\r\n                                return {\r\n                                    ...data,\r\n                                    styles: {\r\n                                        ...data.styles,\r\n                                        overflowY: 'auto',\r\n                                        maxHeight: this.state.height * 0.6\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                >\r\n                    {Object.keys(plotTypes).map(\r\n                        (plotType) =>\r\n                            // no One-vs-Rest comparison plot when current region is Global\r\n                            plotType === 'plot_one_vs_rest' && currentRegionIsGlobal ? (\r\n                                <div key={`dropdown-${plotType}`} />\r\n                            ) : plotTypes[plotType].subregions && !hasSubregions ? (\r\n                                <div key={`dropdown-${plotType}`} />\r\n                            ) : (\r\n                                <Fragment key={`dropdown-${plotType}`}>\r\n                                    {plotType === 'plot_basic' &&\r\n                                    hasSubregions && <DropdownItem header>{i18n.OVERALL[lang]}</DropdownItem>}\r\n                                    {plotType === 'plot_ranking' && hasSubregions && <DropdownItem divider />}\r\n                                    {plotType === 'plot_ranking' &&\r\n                                    hasSubregions && <DropdownItem header>{i18n.SUBREGIONS[lang]}</DropdownItem>}\r\n                                    <DropdownItem\r\n                                        className={currentPlotType === plotType ? 'current' : ''}\r\n                                        onClick={() => {\r\n                                            onPlotTypeChange(plotType)\r\n                                            this.setState({\r\n                                                dropdownOpen: !this.state.dropdownOpen\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        {plotTypes[plotType].text[lang]}\r\n                                    </DropdownItem>\r\n                                </Fragment>\r\n                            )\r\n                    )}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}