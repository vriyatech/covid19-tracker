{"ast":null,"code":"import _classCallCheck from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\programming\\\\react\\\\new covid\\\\covid19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{metricText,getDataFromRegion,previousDay}from'../utils/utils';import{isMobile,isIPad13}from'react-device-detect';import i18n from'../data/i18n.yml';var MainCounts=/*#__PURE__*/function(_Component){_inherits(MainCounts,_Component);var _super=_createSuper(MainCounts);function MainCounts(){var _this;_classCallCheck(this,MainCounts);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={showNewCases:{confirmedCount:false,deadCount:false,curedCount:false}};_this.toggleView=function(metric){var showNewCases=_this.state.showNewCases;showNewCases[metric]=!showNewCases[metric];_this.setState({showNewCases:showNewCases});};return _this;}_createClass(MainCounts,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,data=_this$props.data,currentRegion=_this$props.currentRegion,date=_this$props.date,lang=_this$props.lang,fullPlot=_this$props.fullPlot;if(data==null)return/*#__PURE__*/React.createElement(\"div\",null);return/*#__PURE__*/React.createElement(\"div\",{className:\"counts-wrap\"},!fullPlot&&['confirmedCount','deadCount','curedCount'].map(function(metric){var count=Object.keys(getDataFromRegion(data,currentRegion)[metric]).length>0?getDataFromRegion(data,currentRegion)[metric][date]:'—';var preDate=previousDay(date,'2019-09-01','2050-01-01');var preCount=Object.keys(getDataFromRegion(data,currentRegion)[metric]).length>0?getDataFromRegion(data,currentRegion)[metric][preDate]:0;var diff=0;if(parseInt(count)!=null&&parseInt(preCount)!=null)diff=parseInt(count)-parseInt(preCount);return/*#__PURE__*/React.createElement(\"div\",{key:\"\".concat(metric,\"-number\"),className:\"count-wrap\",onMouseEnter:function onMouseEnter(){return isMobile||isIPad13?null:_this2.toggleView(metric);},onMouseLeave:function onMouseLeave(){return isMobile||isIPad13?null:_this2.toggleView(metric);},onTouchStart:function onTouchStart(){return _this2.toggleView(metric);}},!_this2.state.showNewCases[metric]?/*#__PURE__*/React.createElement(\"div\",{className:\"count\"},count?count:0):/*#__PURE__*/React.createElement(\"div\",{className:\"count\"},diff?diff:'—'),!_this2.state.showNewCases[metric]?/*#__PURE__*/React.createElement(\"div\",{className:\"count-title\"},metricText[metric][lang]):/*#__PURE__*/React.createElement(\"div\",{className:\"count-title\"},i18n.NEWCASE[lang]));}));}}]);return MainCounts;}(Component);export{MainCounts as default};","map":{"version":3,"sources":["D:/programming/react/new covid/covid19/src/components/MainCounts.js"],"names":["React","Component","metricText","getDataFromRegion","previousDay","isMobile","isIPad13","i18n","MainCounts","state","showNewCases","confirmedCount","deadCount","curedCount","toggleView","metric","setState","props","data","currentRegion","date","lang","fullPlot","map","count","Object","keys","length","preDate","preCount","diff","parseInt","NEWCASE"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { metricText, getDataFromRegion, previousDay } from '../utils/utils'\r\nimport { isMobile, isIPad13 } from 'react-device-detect'\r\nimport i18n from '../data/i18n.yml'\r\n\r\nexport default class MainCounts extends Component {\r\n    state = {\r\n        showNewCases: {\r\n            confirmedCount: false,\r\n            deadCount: false,\r\n            curedCount: false\r\n        }\r\n    }\r\n\r\n    toggleView = (metric) => {\r\n        let showNewCases = this.state.showNewCases\r\n        showNewCases[metric] = !showNewCases[metric]\r\n        this.setState({ showNewCases })\r\n    }\r\n\r\n    render() {\r\n        const { data, currentRegion, date, lang, fullPlot } = this.props\r\n        if (data == null) return <div />\r\n\r\n        return (\r\n            <div className=\"counts-wrap\">\r\n                {!fullPlot &&\r\n                    [ 'confirmedCount', 'deadCount', 'curedCount' ].map((metric) => {\r\n                        const count =\r\n                            Object.keys(getDataFromRegion(data, currentRegion)[metric]).length > 0\r\n                                ? getDataFromRegion(data, currentRegion)[metric][date]\r\n                                : '—'\r\n                        const preDate = previousDay(date, '2019-09-01', '2050-01-01')\r\n\r\n                        const preCount =\r\n                            Object.keys(getDataFromRegion(data, currentRegion)[metric]).length > 0\r\n                                ? getDataFromRegion(data, currentRegion)[metric][preDate]\r\n                                : 0\r\n                        let diff = 0\r\n                        if (parseInt(count) != null && parseInt(preCount) != null)\r\n                            diff = parseInt(count) - parseInt(preCount)\r\n\r\n                        return (\r\n                            <div\r\n                                key={`${metric}-number`}\r\n                                className=\"count-wrap\"\r\n                                onMouseEnter={() => (isMobile || isIPad13 ? null : this.toggleView(metric))}\r\n                                onMouseLeave={() => (isMobile || isIPad13 ? null : this.toggleView(metric))}\r\n                                onTouchStart={() => this.toggleView(metric)}\r\n                            >\r\n                                {!this.state.showNewCases[metric] ? (\r\n                                    <div className=\"count\">{count ? count : 0}</div>\r\n                                ) : (\r\n                                    <div className=\"count\">{diff ? diff : '—'}</div>\r\n                                )}\r\n                                {!this.state.showNewCases[metric] ? (\r\n                                    <div className=\"count-title\">{metricText[metric][lang]}</div>\r\n                                ) : (\r\n                                    <div className=\"count-title\">{i18n.NEWCASE[lang]}</div>\r\n                                )}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}